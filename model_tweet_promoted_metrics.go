/*
Tweets and Users

API Reference â€” Labs v2

API version: 2.13
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package twitterapi

import (
	"encoding/json"
)

// TweetPromotedMetrics Promoted nonpublic engagement metrics for the Tweet at the time of the request.
type TweetPromotedMetrics struct {
	// Number of times this Tweet has been viewed.
	ImpressionCount *int32 `json:"impression_count,omitempty"`
	// Number of times this Tweet has been liked.
	LikeCount *int32 `json:"like_count,omitempty"`
	// Number of times this Tweet has been replied to.
	ReplyCount *int32 `json:"reply_count,omitempty"`
	// Number of times this Tweet has been Retweeted.
	RetweetCount *int32 `json:"retweet_count,omitempty"`
	// Number of times the user's profile from this Tweet has been clicked.
	UserProfileClicks *int32 `json:"user_profile_clicks,omitempty"`
	// Number of times links in this Tweet have been clicked.
	UrlLinkClicks *int32 `json:"url_link_clicks,omitempty"`
}

// NewTweetPromotedMetrics instantiates a new TweetPromotedMetrics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTweetPromotedMetrics() *TweetPromotedMetrics {
	this := TweetPromotedMetrics{}
	return &this
}

// NewTweetPromotedMetricsWithDefaults instantiates a new TweetPromotedMetrics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTweetPromotedMetricsWithDefaults() *TweetPromotedMetrics {
	this := TweetPromotedMetrics{}
	return &this
}

// GetImpressionCount returns the ImpressionCount field value if set, zero value otherwise.
func (o *TweetPromotedMetrics) GetImpressionCount() int32 {
	if o == nil || o.ImpressionCount == nil {
		var ret int32
		return ret
	}
	return *o.ImpressionCount
}

// GetImpressionCountOk returns a tuple with the ImpressionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TweetPromotedMetrics) GetImpressionCountOk() (*int32, bool) {
	if o == nil || o.ImpressionCount == nil {
		return nil, false
	}
	return o.ImpressionCount, true
}

// HasImpressionCount returns a boolean if a field has been set.
func (o *TweetPromotedMetrics) HasImpressionCount() bool {
	if o != nil && o.ImpressionCount != nil {
		return true
	}

	return false
}

// SetImpressionCount gets a reference to the given int32 and assigns it to the ImpressionCount field.
func (o *TweetPromotedMetrics) SetImpressionCount(v int32) {
	o.ImpressionCount = &v
}

// GetLikeCount returns the LikeCount field value if set, zero value otherwise.
func (o *TweetPromotedMetrics) GetLikeCount() int32 {
	if o == nil || o.LikeCount == nil {
		var ret int32
		return ret
	}
	return *o.LikeCount
}

// GetLikeCountOk returns a tuple with the LikeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TweetPromotedMetrics) GetLikeCountOk() (*int32, bool) {
	if o == nil || o.LikeCount == nil {
		return nil, false
	}
	return o.LikeCount, true
}

// HasLikeCount returns a boolean if a field has been set.
func (o *TweetPromotedMetrics) HasLikeCount() bool {
	if o != nil && o.LikeCount != nil {
		return true
	}

	return false
}

// SetLikeCount gets a reference to the given int32 and assigns it to the LikeCount field.
func (o *TweetPromotedMetrics) SetLikeCount(v int32) {
	o.LikeCount = &v
}

// GetReplyCount returns the ReplyCount field value if set, zero value otherwise.
func (o *TweetPromotedMetrics) GetReplyCount() int32 {
	if o == nil || o.ReplyCount == nil {
		var ret int32
		return ret
	}
	return *o.ReplyCount
}

// GetReplyCountOk returns a tuple with the ReplyCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TweetPromotedMetrics) GetReplyCountOk() (*int32, bool) {
	if o == nil || o.ReplyCount == nil {
		return nil, false
	}
	return o.ReplyCount, true
}

// HasReplyCount returns a boolean if a field has been set.
func (o *TweetPromotedMetrics) HasReplyCount() bool {
	if o != nil && o.ReplyCount != nil {
		return true
	}

	return false
}

// SetReplyCount gets a reference to the given int32 and assigns it to the ReplyCount field.
func (o *TweetPromotedMetrics) SetReplyCount(v int32) {
	o.ReplyCount = &v
}

// GetRetweetCount returns the RetweetCount field value if set, zero value otherwise.
func (o *TweetPromotedMetrics) GetRetweetCount() int32 {
	if o == nil || o.RetweetCount == nil {
		var ret int32
		return ret
	}
	return *o.RetweetCount
}

// GetRetweetCountOk returns a tuple with the RetweetCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TweetPromotedMetrics) GetRetweetCountOk() (*int32, bool) {
	if o == nil || o.RetweetCount == nil {
		return nil, false
	}
	return o.RetweetCount, true
}

// HasRetweetCount returns a boolean if a field has been set.
func (o *TweetPromotedMetrics) HasRetweetCount() bool {
	if o != nil && o.RetweetCount != nil {
		return true
	}

	return false
}

// SetRetweetCount gets a reference to the given int32 and assigns it to the RetweetCount field.
func (o *TweetPromotedMetrics) SetRetweetCount(v int32) {
	o.RetweetCount = &v
}

// GetUserProfileClicks returns the UserProfileClicks field value if set, zero value otherwise.
func (o *TweetPromotedMetrics) GetUserProfileClicks() int32 {
	if o == nil || o.UserProfileClicks == nil {
		var ret int32
		return ret
	}
	return *o.UserProfileClicks
}

// GetUserProfileClicksOk returns a tuple with the UserProfileClicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TweetPromotedMetrics) GetUserProfileClicksOk() (*int32, bool) {
	if o == nil || o.UserProfileClicks == nil {
		return nil, false
	}
	return o.UserProfileClicks, true
}

// HasUserProfileClicks returns a boolean if a field has been set.
func (o *TweetPromotedMetrics) HasUserProfileClicks() bool {
	if o != nil && o.UserProfileClicks != nil {
		return true
	}

	return false
}

// SetUserProfileClicks gets a reference to the given int32 and assigns it to the UserProfileClicks field.
func (o *TweetPromotedMetrics) SetUserProfileClicks(v int32) {
	o.UserProfileClicks = &v
}

// GetUrlLinkClicks returns the UrlLinkClicks field value if set, zero value otherwise.
func (o *TweetPromotedMetrics) GetUrlLinkClicks() int32 {
	if o == nil || o.UrlLinkClicks == nil {
		var ret int32
		return ret
	}
	return *o.UrlLinkClicks
}

// GetUrlLinkClicksOk returns a tuple with the UrlLinkClicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TweetPromotedMetrics) GetUrlLinkClicksOk() (*int32, bool) {
	if o == nil || o.UrlLinkClicks == nil {
		return nil, false
	}
	return o.UrlLinkClicks, true
}

// HasUrlLinkClicks returns a boolean if a field has been set.
func (o *TweetPromotedMetrics) HasUrlLinkClicks() bool {
	if o != nil && o.UrlLinkClicks != nil {
		return true
	}

	return false
}

// SetUrlLinkClicks gets a reference to the given int32 and assigns it to the UrlLinkClicks field.
func (o *TweetPromotedMetrics) SetUrlLinkClicks(v int32) {
	o.UrlLinkClicks = &v
}

func (o TweetPromotedMetrics) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ImpressionCount != nil {
		toSerialize["impression_count"] = o.ImpressionCount
	}
	if o.LikeCount != nil {
		toSerialize["like_count"] = o.LikeCount
	}
	if o.ReplyCount != nil {
		toSerialize["reply_count"] = o.ReplyCount
	}
	if o.RetweetCount != nil {
		toSerialize["retweet_count"] = o.RetweetCount
	}
	if o.UserProfileClicks != nil {
		toSerialize["user_profile_clicks"] = o.UserProfileClicks
	}
	if o.UrlLinkClicks != nil {
		toSerialize["url_link_clicks"] = o.UrlLinkClicks
	}
	return json.Marshal(toSerialize)
}

type NullableTweetPromotedMetrics struct {
	value *TweetPromotedMetrics
	isSet bool
}

func (v NullableTweetPromotedMetrics) Get() *TweetPromotedMetrics {
	return v.value
}

func (v *NullableTweetPromotedMetrics) Set(val *TweetPromotedMetrics) {
	v.value = val
	v.isSet = true
}

func (v NullableTweetPromotedMetrics) IsSet() bool {
	return v.isSet
}

func (v *NullableTweetPromotedMetrics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTweetPromotedMetrics(val *TweetPromotedMetrics) *NullableTweetPromotedMetrics {
	return &NullableTweetPromotedMetrics{value: val, isSet: true}
}

func (v NullableTweetPromotedMetrics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTweetPromotedMetrics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


