openapi: 3.0.0
info:
  title: Twitter API v2
  description: Twitter API v2 available endpoints
  termsOfService: https://developer.twitter.com/en/developer-terms/agreement-and-policy.html
  contact:
    name: Twitter Developers
    url: https://developer.twitter.com/
  license:
    name: Twitter Developer Agreement and Policy
    url: https://developer.twitter.com/en/developer-terms/agreement-and-policy.html
  version: "2.43"
servers:
- url: https://api.twitter.com
  description: Twitter API
tags:
- name: Bookmarks
  description: "Endpoints related to retrieving, managing bookmarks of a user"
  externalDocs:
    description: Find out more
    url: https://developer.twitter.com/en/docs/twitter-api/bookmarks
- name: Compliance
  description: Endpoints related to keeping Twitter data in your systems compliant
  externalDocs:
    description: Find out more
    url: https://developer.twitter.com/en/docs/twitter-api/compliance/batch-tweet/introduction
- name: General
  description: Miscellaneous endpoints for general API functionality
  externalDocs:
    description: Find out more
    url: https://developer.twitter.com/en/docs/twitter-api
- name: Lists
  description: "Endpoints related to retrieving, managing Lists"
  externalDocs:
    description: Find out more
    url: https://developer.twitter.com/en/docs/twitter-api/lists
- name: Spaces
  description: "Endpoints related to retrieving, managing Spaces"
  externalDocs:
    description: Find out more
    url: https://developer.twitter.com/en/docs/twitter-api/spaces
- name: Tweets
  description: "Endpoints related to retrieving, searching, and modifying Tweets"
  externalDocs:
    description: Find out more
    url: https://developer.twitter.com/en/docs/twitter-api/tweets/lookup
- name: Users
  description: "Endpoints related to retrieving, managing relationships of Users"
  externalDocs:
    description: Find out more
    url: https://developer.twitter.com/en/docs/twitter-api/users/lookup
paths:
  /2/users:
    get:
      tags:
      - Users
      summary: User lookup by IDs
      description: This endpoint returns information about users. Specify users by
        their ID.
      operationId: findUsersById
      parameters:
      - name: ids
        in: query
        description: "Required. A list of User IDs, comma-separated. You can specify\
          \ up to 100 IDs."
        required: true
        style: form
        explode: false
        schema:
          maxItems: 100
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/UserID'
        example: "2244994945,6253282,12"
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [User](#User) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - pinned_tweet_id
          items:
            type: string
            enum:
            - pinned_tweet_id
      - name: tweet.fields
        in: query
        description: A comma separated list of Tweet fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [Tweet](#Tweet) object."
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            type: string
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiUserLookupResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - UserToken: []
      - OAuth2UserToken:
        - tweet.read
        - users.read
  /2/users/{id}:
    get:
      tags:
      - Users
      summary: User lookup by ID
      description: This endpoint returns information about a user. Specify user by
        ID.
      operationId: findUserById
      parameters:
      - name: id
        in: path
        description: Required. A User ID.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
        example: "2244994945"
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [User](#User) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - pinned_tweet_id
          items:
            type: string
            enum:
            - pinned_tweet_id
      - name: tweet.fields
        in: query
        description: A comma separated list of Tweet fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [Tweet](#Tweet) object."
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            type: string
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleUserLookupResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - UserToken: []
      - OAuth2UserToken:
        - tweet.read
        - users.read
  /2/users/by:
    get:
      tags:
      - Users
      summary: User lookup by usernames
      description: This endpoint returns information about users. Specify users by
        their username.
      operationId: findUsersByUsername
      parameters:
      - name: usernames
        in: query
        description: "Required . A list of usernames, comma-separated. You can specify\
          \ up to 100 usernames."
        required: true
        style: form
        explode: false
        schema:
          maxItems: 100
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/UserName'
        example: "TwitterDev,TwitterAPI,jack"
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [User](#User) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - pinned_tweet_id
          items:
            type: string
            enum:
            - pinned_tweet_id
      - name: tweet.fields
        in: query
        description: A comma separated list of Tweet fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [Tweet](#Tweet) object."
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            type: string
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiUserLookupResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - UserToken: []
      - OAuth2UserToken:
        - tweet.read
        - users.read
  /2/users/me:
    get:
      tags:
      - Users
      summary: User lookup me
      description: This endpoint returns information about the requesting user.
      operationId: findMyUser
      parameters:
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [User](#User) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - pinned_tweet_id
          items:
            type: string
            enum:
            - pinned_tweet_id
      - name: tweet.fields
        in: query
        description: A comma separated list of Tweet fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [Tweet](#Tweet) object."
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            type: string
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleUserLookupResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - tweet.read
        - users.read
  /2/users/by/username/{username}:
    get:
      tags:
      - Users
      summary: User lookup by username
      description: This endpoint returns information about a user. Specify user by
        username.
      operationId: findUserByUsername
      parameters:
      - name: username
        in: path
        description: Required. A username.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserName'
        example: TwitterDev
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [User](#User) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - pinned_tweet_id
          items:
            type: string
            enum:
            - pinned_tweet_id
      - name: tweet.fields
        in: query
        description: A comma separated list of Tweet fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [Tweet](#Tweet) object."
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            type: string
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleUserLookupResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - UserToken: []
      - OAuth2UserToken:
        - tweet.read
        - users.read
  /2/users/{id}/blocking:
    get:
      tags:
      - Users
      summary: Returns user objects that are blocked by provided user ID
      description: Returns a list of users that are blocked by the provided user ID
      operationId: usersIdBlocking
      parameters:
      - name: id
        in: path
        description: The ID of the user for whom to return results
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      - name: max_results
        in: query
        description: The maximum number of results
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
      - name: pagination_token
        in: query
        description: This value is populated by passing the 'next_token' or 'previous_token'
          returned in a request to paginate through results.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 16
          minLength: 16
          type: string
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericMultipleUsersLookupResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - tweet.read
        - users.read
        - block.read
    post:
      tags:
      - Users
      summary: Block User by User ID
      description: Causes the user (in the path) to block the target user. The user
        (in the path) must match the user context authorizing the request
      operationId: usersIdBlock
      parameters:
      - name: id
        in: path
        description: The ID of the user that is requesting to block the target user
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/id_blocking_body'
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersBlockingMutationResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - tweet.read
        - users.read
        - block.write
  /2/users/{source_user_id}/blocking/{target_user_id}:
    delete:
      tags:
      - Users
      summary: Unblock User by User ID
      description: Causes the source user to unblock the target user. The source user
        must match the user context authorizing the request
      operationId: usersIdUnblock
      parameters:
      - name: source_user_id
        in: path
        description: The ID of the user that is requesting to unblock the target user
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      - name: target_user_id
        in: path
        description: The ID of the user that the source user is requesting to unblock
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersBlockingMutationResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - tweet.read
        - users.read
        - block.write
  /2/users/{id}/bookmarks:
    get:
      tags:
      - Bookmarks
      summary: Bookmarks by User
      description: Returns Tweet objects that have been bookmarked by the requesting
        user
      operationId: getUsersIdBookmarks
      parameters:
      - name: id
        in: path
        description: The ID of the user for whom to return results
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      - name: max_results
        in: query
        description: The maximum number of results
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 5
          type: integer
          format: int32
      - name: pagination_token
        in: query
        description: This parameter is used to get the next 'page' of results.
        required: false
        style: form
        explode: true
        schema:
          minLength: 1
          type: string
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [Tweet](#Tweet) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          items:
            type: string
            enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
      - name: tweet.fields
        in: query
        description: A comma separated list of Tweet fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [Tweet](#Tweet) object."
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            type: string
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      - name: media.fields
        in: query
        description: A comma separated list of Media fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Media object.
          example:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          - non_public_metrics
          - organic_metrics
          - promoted_metrics
          - alt_text
          - variants
          items:
            type: string
            enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
            - alt_text
            - variants
      - name: place.fields
        in: query
        description: A comma separated list of Place fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Place object.
          example:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          items:
            type: string
            enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
      - name: poll.fields
        in: query
        description: A comma separated list of Poll fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Poll object.
          example:
          - duration_minutes
          - options
          - voting_status
          - end_datetime
          items:
            type: string
            enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericTweetsTimelineResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - OAuth2UserToken:
        - tweet.read
        - users.read
        - bookmark.read
    post:
      tags:
      - Bookmarks
      summary: Add Tweet to Bookmarks
      description: Adds a Tweet (ID in the body) to the requesting user's (in the
        path) bookmarks
      operationId: postUsersIdBookmarks
      parameters:
      - name: id
        in: path
        description: The ID of the user for whom to add bookmarks
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddBookmarkRequest'
        required: true
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookmarkMutationResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - OAuth2UserToken:
        - tweet.read
        - users.read
        - bookmark.write
  /2/users/{id}/bookmarks/{tweet_id}:
    delete:
      tags:
      - Bookmarks
      summary: Remove a bookmarked Tweet
      description: Removes a Tweet from the requesting user's bookmarked Tweets.
      operationId: usersIdBookmarksDelete
      parameters:
      - name: id
        in: path
        description: The ID of the user whose bookmark is to be removed.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      - name: tweet_id
        in: path
        description: The ID of the tweet that the user is removing from bookmarks
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/TweetID'
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookmarkMutationResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - OAuth2UserToken:
        - tweet.read
        - users.read
        - bookmark.write
  /2/users/{source_user_id}/muting/{target_user_id}:
    delete:
      tags:
      - Users
      summary: Unmute User by User ID
      description: Causes the source user to unmute the target user. The source user
        must match the user context authorizing the request
      operationId: usersIdUnmute
      parameters:
      - name: source_user_id
        in: path
        description: The ID of the user that is requesting to unmute the target user
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      - name: target_user_id
        in: path
        description: The ID of the user that the source user is requesting to unmute
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersMutingMutationResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - tweet.read
        - users.read
        - mute.write
  /2/users/{id}/muting:
    get:
      tags:
      - Users
      summary: Returns user objects that are muted by the provided user ID
      description: Returns a list of users that are muted by the provided user ID
      operationId: usersIdMuting
      parameters:
      - name: id
        in: path
        description: The ID of the user for whom to return results
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      - name: max_results
        in: query
        description: The maximum number of results
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 100
      - name: pagination_token
        in: query
        description: This parameter is used to get the next 'page' of results.
        required: false
        style: form
        explode: true
        schema:
          minLength: 1
          type: string
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericMultipleUsersLookupResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - tweet.read
        - users.read
        - mute.read
    post:
      tags:
      - Users
      summary: Mute User by User ID
      description: Causes the user (in the path) to mute the target user. The user
        (in the path) must match the user context authorizing the request
      operationId: usersIdMute
      parameters:
      - name: id
        in: path
        description: The ID of the user that is requesting to mute the target user
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/id_muting_body'
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersMutingMutationResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - tweet.read
        - users.read
        - mute.write
  /2/users/{id}/followers:
    get:
      tags:
      - Users
      summary: Returns user objects that follow the provided user ID
      description: Returns a list of users that follow the provided user ID
      operationId: usersIdFollowers
      parameters:
      - name: id
        in: path
        description: The ID of the user for whom to return results
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      - name: max_results
        in: query
        description: The maximum number of results
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
      - name: pagination_token
        in: query
        description: This value is populated by passing the 'next_token' or 'previous_token'
          returned in a request to paginate through results.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 16
          minLength: 16
          type: string
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericMultipleUsersLookupResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - follows.read
  /2/users/{id}/following:
    get:
      tags:
      - Users
      summary: Following by User ID
      description: Returns a list of users that are being followed by the provided
        user ID
      operationId: usersIdFollowing
      parameters:
      - name: id
        in: path
        description: The ID of the user for whom to return results
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      - name: max_results
        in: query
        description: The maximum number of results
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
      - name: pagination_token
        in: query
        description: This value is populated by passing the 'next_token' or 'previous_token'
          returned in a request to paginate through results.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 16
          minLength: 16
          type: string
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersFollowingLookupResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - follows.read
    post:
      tags:
      - Users
      summary: Follow User
      description: "Causes the user(in the path) to follow, or “request to follow”\
        \ for protected users, the target user. The user(in the path) must match the\
        \ user context authorizing the request"
      operationId: usersIdFollow
      parameters:
      - name: id
        in: path
        description: The ID of the user that is requesting to follow the target user
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/id_following_body'
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersFollowingCreateResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - follows.write
  /2/users/{source_user_id}/following/{target_user_id}:
    delete:
      tags:
      - Users
      summary: Unfollow User
      description: Causes the source user to unfollow the target user. The source
        user must match the user context authorizing the request
      operationId: usersIdUnfollow
      parameters:
      - name: source_user_id
        in: path
        description: The ID of the user that is requesting to unfollow the target
          user
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      - name: target_user_id
        in: path
        description: The ID of the user that the source user is requesting to unfollow
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersFollowingDeleteResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - follows.write
  /2/users/{id}/followed_lists:
    get:
      tags:
      - Lists
      summary: Get User's Followed Lists
      description: Returns a user's followed Lists.
      operationId: userFollowedLists
      parameters:
      - name: id
        in: path
        description: The ID of the user for whom to return results
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      - name: max_results
        in: query
        description: The maximum number of results
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 100
      - name: pagination_token
        in: query
        description: This parameter is used to get a specified 'page' of results.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: list.fields
        in: query
        description: A comma separated list of List fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The fields available for a List object.
          example:
          - created_at
          - description
          - follower_count
          - member_count
          - name
          - private
          items:
            type: string
            enum:
            - created_at
            - description
            - follower_count
            - id
            - member_count
            - name
            - owner_id
            - private
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [List](#List) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - owner_id
          items:
            type: string
            enum:
            - owner_id
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiListResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - list.read
    post:
      tags:
      - Lists
      summary: Follow a List
      description: Causes a user to follow a List.
      operationId: listUserFollow
      parameters:
      - name: id
        in: path
        description: The ID of the authenticated source user that will follow the
          List
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFollowRequest'
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFollowedResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - list.write
  /2/users/{id}/followed_lists/{list_id}:
    delete:
      tags:
      - Lists
      summary: Unfollow a List
      description: Causes a user to unfollow a List.
      operationId: listUserUnfollow
      parameters:
      - name: id
        in: path
        description: The ID of the authenticated source user that will unfollow the
          List
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      - name: list_id
        in: path
        description: The ID of the List to unfollow
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ListID'
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFollowedResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - list.write
  /2/users/{id}/list_memberships:
    get:
      tags:
      - Lists
      summary: Get a User's List Memberships
      description: Get a User's List Memberships.
      operationId: getUserListMemberships
      parameters:
      - name: id
        in: path
        description: The ID of the user for whom to return results
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      - name: max_results
        in: query
        description: The maximum number of results
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 100
      - name: pagination_token
        in: query
        description: This parameter is used to get a specified 'page' of results.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: list.fields
        in: query
        description: A comma separated list of List fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The fields available for a List object.
          example:
          - created_at
          - description
          - follower_count
          - member_count
          - name
          - private
          items:
            type: string
            enum:
            - created_at
            - description
            - follower_count
            - id
            - member_count
            - name
            - owner_id
            - private
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [List](#List) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - owner_id
          items:
            type: string
            enum:
            - owner_id
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiListResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - list.read
  /2/users/{id}/owned_lists:
    get:
      tags:
      - Lists
      summary: Get a User's Owned Lists
      description: Get a User's Owned Lists.
      operationId: listUserOwnedLists
      parameters:
      - name: id
        in: path
        description: The ID of the user for whom to return results
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      - name: max_results
        in: query
        description: The maximum number of results
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 100
      - name: pagination_token
        in: query
        description: This parameter is used to get a specified 'page' of results.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: list.fields
        in: query
        description: A comma separated list of List fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The fields available for a List object.
          example:
          - created_at
          - description
          - follower_count
          - member_count
          - name
          - private
          items:
            type: string
            enum:
            - created_at
            - description
            - follower_count
            - id
            - member_count
            - name
            - owner_id
            - private
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [List](#List) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - owner_id
          items:
            type: string
            enum:
            - owner_id
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiListResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - list.read
  /2/users/{id}/pinned_lists:
    get:
      tags:
      - Lists
      summary: Get a User's Pinned Lists
      description: Get a User's Pinned Lists.
      operationId: listUserPinnedLists
      parameters:
      - name: id
        in: path
        description: The ID of the user for whom to return results
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      - name: list.fields
        in: query
        description: A comma separated list of List fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The fields available for a List object.
          example:
          - created_at
          - description
          - follower_count
          - member_count
          - name
          - private
          items:
            type: string
            enum:
            - created_at
            - description
            - follower_count
            - id
            - member_count
            - name
            - owner_id
            - private
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [List](#List) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - owner_id
          items:
            type: string
            enum:
            - owner_id
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiListNoPaginationResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - list.read
    post:
      tags:
      - Lists
      summary: Pin a List
      description: Causes a user to pin a List.
      operationId: listUserPin
      parameters:
      - name: id
        in: path
        description: The ID of the authenticated source user that will pin the List
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPinRequest'
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPinnedResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - list.write
  /2/users/{id}/pinned_lists/{list_id}:
    delete:
      tags:
      - Lists
      summary: Unpin a List
      description: Causes a user to remove a pinned List.
      operationId: listUserUnpin
      parameters:
      - name: id
        in: path
        description: The ID of the authenticated source user that will remove the
          pinned List
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      - name: list_id
        in: path
        description: The ID of the List to unpin
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ListID'
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPinnedResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - list.write
  /2/tweets:
    get:
      tags:
      - Tweets
      summary: Tweet lookup by Tweet IDs
      description: Returns a variety of information about the Tweet specified by the
        requested ID.
      operationId: findTweetsById
      parameters:
      - name: ids
        in: query
        description: A comma separated list of Tweet IDs. Up to 100 are allowed in
          a single request.
        required: true
        style: form
        explode: false
        schema:
          maxItems: 100
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/TweetID'
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [Tweet](#Tweet) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          items:
            type: string
            enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
      - name: tweet.fields
        in: query
        description: A comma separated list of Tweet fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [Tweet](#Tweet) object."
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            type: string
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      - name: media.fields
        in: query
        description: A comma separated list of Media fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Media object.
          example:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          - non_public_metrics
          - organic_metrics
          - promoted_metrics
          - alt_text
          - variants
          items:
            type: string
            enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
            - alt_text
            - variants
      - name: place.fields
        in: query
        description: A comma separated list of Place fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Place object.
          example:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          items:
            type: string
            enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
      - name: poll.fields
        in: query
        description: A comma separated list of Poll fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Poll object.
          example:
          - duration_minutes
          - options
          - voting_status
          - end_datetime
          items:
            type: string
            enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiTweetLookupResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - UserToken: []
      - OAuth2UserToken:
        - tweet.read
        - users.read
    post:
      tags:
      - Tweets
      summary: Creation of a Tweet
      description: Causes the user to create a tweet under the authorized account.
      operationId: createTweet
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_tweets_body'
      responses:
        "201":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetCreateResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - tweet.write
  /2/tweets/{id}:
    get:
      tags:
      - Tweets
      summary: Tweet lookup by Tweet ID
      description: Returns a variety of information about the Tweet specified by the
        requested ID.
      operationId: findTweetById
      parameters:
      - name: id
        in: path
        description: A single Tweet ID.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/TweetID'
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [Tweet](#Tweet) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          items:
            type: string
            enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
      - name: tweet.fields
        in: query
        description: A comma separated list of Tweet fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [Tweet](#Tweet) object."
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            type: string
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      - name: media.fields
        in: query
        description: A comma separated list of Media fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Media object.
          example:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          - non_public_metrics
          - organic_metrics
          - promoted_metrics
          - alt_text
          - variants
          items:
            type: string
            enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
            - alt_text
            - variants
      - name: place.fields
        in: query
        description: A comma separated list of Place fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Place object.
          example:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          items:
            type: string
            enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
      - name: poll.fields
        in: query
        description: A comma separated list of Poll fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Poll object.
          example:
          - duration_minutes
          - options
          - voting_status
          - end_datetime
          items:
            type: string
            enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleTweetLookupResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - UserToken: []
      - OAuth2UserToken:
        - tweet.read
        - users.read
    delete:
      tags:
      - Tweets
      summary: Tweet delete by Tweet ID
      description: Delete specified Tweet (in the path) by ID.
      operationId: deleteTweetById
      parameters:
      - name: id
        in: path
        description: The ID of the Tweet to be deleted.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/TweetID'
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetDeleteResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - tweet.write
  /2/tweets/{id}/quote_tweets:
    get:
      tags:
      - Tweets
      summary: Retrieve tweets that quote a tweet.
      description: Returns a variety of information about each tweet that quotes the
        Tweet specified by the requested ID.
      operationId: findTweetsThatQuoteATweet
      parameters:
      - name: id
        in: path
        description: The ID of the Quoted Tweet.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/TweetID'
      - name: max_results
        in: query
        description: The maximum number of results to be returned.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 10
          type: integer
          format: int32
          default: 10
      - name: pagination_token
        in: query
        description: This parameter is used to get the next 'page' of results.
        required: false
        style: form
        explode: true
        schema:
          minLength: 1
          type: string
      - name: exclude
        in: query
        description: The set of entities to exclude (e.g. 'replies' or 'retweets')
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The set of entities to exclude (e.g. 'replies' or 'retweets')
          example:
          - replies
          - retweets
          items:
            type: string
            enum:
            - replies
            - retweets
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [Tweet](#Tweet) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          items:
            type: string
            enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
      - name: tweet.fields
        in: query
        description: A comma separated list of Tweet fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [Tweet](#Tweet) object."
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            type: string
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      - name: media.fields
        in: query
        description: A comma separated list of Media fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Media object.
          example:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          - non_public_metrics
          - organic_metrics
          - promoted_metrics
          - alt_text
          - variants
          items:
            type: string
            enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
            - alt_text
            - variants
      - name: place.fields
        in: query
        description: A comma separated list of Place fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Place object.
          example:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          items:
            type: string
            enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
      - name: poll.fields
        in: query
        description: A comma separated list of Poll fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Poll object.
          example:
          - duration_minutes
          - options
          - voting_status
          - end_datetime
          items:
            type: string
            enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteTweetLookupResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - UserToken: []
      - OAuth2UserToken:
        - tweet.read
        - users.read
  /2/tweets/{id}/hidden:
    put:
      tags:
      - Tweets
      summary: Hide replies
      description: Hides or unhides a reply to an owned conversation.
      operationId: hideReplyById
      parameters:
      - name: id
        in: path
        description: The ID of the reply that you want to hide or unhide.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/TweetID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/id_hidden_body'
      responses:
        "200":
          description: A successful response. The reply has been hidden or unhidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - tweet.moderate.write
  /2/tweets/search/recent:
    get:
      tags:
      - Tweets
      summary: Recent search
      description: Returns Tweets from the last 7 days that match a search query.
      operationId: tweetsRecentSearch
      parameters:
      - name: query
        in: query
        description: One query/rule/filter for matching Tweets. Refer to https:\/\/t.co\/rulelength
          to identify the max query length
        required: true
        style: form
        explode: true
        schema:
          maxLength: 4096
          minLength: 1
          type: string
          example: (from:TwitterDev OR from:TwitterAPI) has:media -is:retweet
      - name: start_time
        in: query
        description: YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp (from most recent
          7 days) from which the Tweets will be provided. Timestamp is in second granularity
          and is inclusive (i.e. 12:00:01 includes the first second of the minute).
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: end_time
        in: query
        description: "YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp\
          \ to which the Tweets will be provided. Timestamp is in second granularity\
          \ and is exclusive (i.e. 12:00:01 excludes the first second of the minute)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: since_id
        in: query
        description: "Returns results with a Tweet ID greater than (that is, more\
          \ recent than) the specified ID."
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/TweetID'
      - name: until_id
        in: query
        description: "Returns results with a Tweet ID less than (that is, older than)\
          \ the specified ID."
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/TweetID'
      - name: max_results
        in: query
        description: The maximum number of search results to be returned by a request.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 10
          type: integer
          format: int32
          default: 10
      - name: sort_order
        in: query
        description: This order in which to return results.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - recency
          - relevancy
          x-version: "[2.36,]"
      - name: next_token
        in: query
        description: "This parameter is used to get the next 'page' of results. The\
          \ value used with the parameter is pulled directly from the response provided\
          \ by the API, and should not be modified."
        required: false
        style: form
        explode: true
        schema:
          minLength: 1
          type: string
      - name: pagination_token
        in: query
        description: "This parameter is used to get the next 'page' of results. The\
          \ value used with the parameter is pulled directly from the response provided\
          \ by the API, and should not be modified."
        required: false
        style: form
        explode: true
        schema:
          minLength: 1
          type: string
          x-renames-parameter: next_token
          x-version: "[2.36,]"
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [Tweet](#Tweet) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          items:
            type: string
            enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
      - name: tweet.fields
        in: query
        description: A comma separated list of Tweet fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [Tweet](#Tweet) object."
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            type: string
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      - name: media.fields
        in: query
        description: A comma separated list of Media fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Media object.
          example:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          - non_public_metrics
          - organic_metrics
          - promoted_metrics
          - alt_text
          - variants
          items:
            type: string
            enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
            - alt_text
            - variants
      - name: place.fields
        in: query
        description: A comma separated list of Place fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Place object.
          example:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          items:
            type: string
            enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
      - name: poll.fields
        in: query
        description: A comma separated list of Poll fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Poll object.
          example:
          - duration_minutes
          - options
          - voting_status
          - end_datetime
          items:
            type: string
            enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
      responses:
        "200":
          description: Tweets recent search response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetSearchResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - UserToken: []
      - OAuth2UserToken:
        - tweet.read
        - users.read
  /2/tweets/search/all:
    get:
      tags:
      - Tweets
      summary: Full-archive search
      description: Returns Tweets that match a search query.
      operationId: tweetsFullarchiveSearch
      parameters:
      - name: query
        in: query
        description: One query/rule/filter for matching Tweets. Refer to https:\/\/t.co\/rulelength
          to identify the max query length
        required: true
        style: form
        explode: true
        schema:
          maxLength: 4096
          minLength: 1
          type: string
          example: (from:TwitterDev OR from:TwitterAPI) has:media -is:retweet
      - name: start_time
        in: query
        description: YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp from which the
          Tweets will be provided. Timestamp is in second granularity and is inclusive
          (i.e. 12:00:01 includes the first second of the minute).
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: end_time
        in: query
        description: "YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp\
          \ to which the Tweets will be provided. Timestamp is in second granularity\
          \ and is exclusive (i.e. 12:00:01 excludes the first second of the minute)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: since_id
        in: query
        description: "Returns results with a Tweet ID greater than (that is, more\
          \ recent than) the specified ID."
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/TweetID'
      - name: until_id
        in: query
        description: "Returns results with a Tweet ID less than (that is, older than)\
          \ the specified ID."
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/TweetID'
      - name: max_results
        in: query
        description: The maximum number of search results to be returned by a request.
        required: false
        style: form
        explode: true
        schema:
          maximum: 500
          minimum: 10
          type: integer
          format: int32
          default: 10
      - name: sort_order
        in: query
        description: This order in which to return results.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - recency
          - relevancy
          x-version: "[2.36,]"
      - name: next_token
        in: query
        description: "This parameter is used to get the next 'page' of results. The\
          \ value used with the parameter is pulled directly from the response provided\
          \ by the API, and should not be modified."
        required: false
        style: form
        explode: true
        schema:
          minLength: 1
          type: string
      - name: pagination_token
        in: query
        description: "This parameter is used to get the next 'page' of results. The\
          \ value used with the parameter is pulled directly from the response provided\
          \ by the API, and should not be modified."
        required: false
        style: form
        explode: true
        schema:
          minLength: 1
          type: string
          x-renames-parameter: next_token
          x-version: "[2.36,]"
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [Tweet](#Tweet) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          items:
            type: string
            enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
      - name: tweet.fields
        in: query
        description: A comma separated list of Tweet fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [Tweet](#Tweet) object."
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            type: string
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      - name: media.fields
        in: query
        description: A comma separated list of Media fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Media object.
          example:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          - non_public_metrics
          - organic_metrics
          - promoted_metrics
          - alt_text
          - variants
          items:
            type: string
            enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
            - alt_text
            - variants
      - name: place.fields
        in: query
        description: A comma separated list of Place fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Place object.
          example:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          items:
            type: string
            enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
      - name: poll.fields
        in: query
        description: A comma separated list of Poll fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Poll object.
          example:
          - duration_minutes
          - options
          - voting_status
          - end_datetime
          items:
            type: string
            enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
      responses:
        "200":
          description: Tweets full archive search response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetSearchResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
  /2/tweets/search/stream:
    get:
      tags:
      - Tweets
      summary: Filtered stream
      description: Streams Tweets matching the stream's active rule set.
      operationId: searchStream
      parameters:
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [Tweet](#Tweet) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          items:
            type: string
            enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
      - name: tweet.fields
        in: query
        description: A comma separated list of Tweet fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [Tweet](#Tweet) object."
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            type: string
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      - name: media.fields
        in: query
        description: A comma separated list of Media fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Media object.
          example:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          - non_public_metrics
          - organic_metrics
          - promoted_metrics
          - alt_text
          - variants
          items:
            type: string
            enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
            - alt_text
            - variants
      - name: place.fields
        in: query
        description: A comma separated list of Place fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Place object.
          example:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          items:
            type: string
            enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
      - name: poll.fields
        in: query
        description: A comma separated list of Poll fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Poll object.
          example:
          - duration_minutes
          - options
          - voting_status
          - end_datetime
          items:
            type: string
            enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
      - name: backfill_minutes
        in: query
        description: The number of minutes of backfill requested
        required: false
        style: form
        explode: true
        schema:
          maximum: 5
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: The request was successful. Successful responses will return
            a stream of individual JSON Tweet payloads.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilteredStreamingTweet'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      x-twitter-streaming: true
  /2/tweets/search/stream/rules:
    get:
      tags:
      - Tweets
      summary: Rules lookup
      description: "Returns rules from a user's active rule set. Users can fetch all\
        \ of their rules or a subset, specified by the provided rule ids."
      operationId: getRules
      parameters:
      - name: ids
        in: query
        description: A comma-separated list of Rule IDs.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/RuleId'
      - name: max_results
        in: query
        description: The maximum number of results
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 1000
      - name: pagination_token
        in: query
        description: This value is populated by passing the 'next_token' returned
          in a request to paginate through results.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 16
          minLength: 16
          type: string
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
    post:
      tags:
      - Tweets
      summary: Add/Delete rules
      description: "Add or delete rules from a user's active rule set. Users can provide\
        \ unique, optionally tagged rules to add. Users can delete their entire rule\
        \ set or a subset specified by rule ids or values."
      operationId: addOrDeleteRules
      parameters:
      - name: dry_run
        in: query
        description: "Dry Run can be used with both the add and delete action, with\
          \ the expected result given, but without actually taking any action in the\
          \ system (meaning the end state will always be as it was when the request\
          \ was submitted). This is particularly useful to validate rule changes."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOrDeleteRulesRequest'
        required: true
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOrDeleteRulesResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
  /2/tweets/sample/stream:
    get:
      tags:
      - Tweets
      summary: Sample stream
      description: Streams a deterministic 1% of public Tweets.
      operationId: sampleStream
      parameters:
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [Tweet](#Tweet) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          items:
            type: string
            enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
      - name: tweet.fields
        in: query
        description: A comma separated list of Tweet fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [Tweet](#Tweet) object."
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            type: string
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      - name: media.fields
        in: query
        description: A comma separated list of Media fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Media object.
          example:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          - non_public_metrics
          - organic_metrics
          - promoted_metrics
          - alt_text
          - variants
          items:
            type: string
            enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
            - alt_text
            - variants
      - name: place.fields
        in: query
        description: A comma separated list of Place fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Place object.
          example:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          items:
            type: string
            enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
      - name: poll.fields
        in: query
        description: A comma separated list of Poll fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Poll object.
          example:
          - duration_minutes
          - options
          - voting_status
          - end_datetime
          items:
            type: string
            enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
      - name: backfill_minutes
        in: query
        description: The number of minutes of backfill requested
        required: false
        style: form
        explode: true
        schema:
          maximum: 5
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: The request was successful. Successful responses will return
            a stream of individual JSON Tweet payloads.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingTweet'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      x-twitter-streaming: true
  /2/openapi.json:
    get:
      tags:
      - General
      summary: Returns the open api spec document.
      description: Full open api spec in JSON format. (See https://github.com/OAI/OpenAPI-Specification/blob/master/README.md)
      operationId: getOpenApiSpec
      parameters: []
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
  /2/users/{id}/timelines/reverse_chronological:
    get:
      tags:
      - Tweets
      summary: User home timeline by User ID
      description: Returns Tweet objects that appears in the provided User ID's home
        timeline
      operationId: usersIdTimeline
      parameters:
      - name: id
        in: path
        description: The ID of the User to list Reverse Chronological Timeline Tweets
          of
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      - name: since_id
        in: query
        description: The minimum Tweet ID to be included in the result set. This parameter
          takes precedence over start_time if both are specified.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/TweetID'
        example: "791775337160081409"
      - name: until_id
        in: query
        description: The maximum Tweet ID to be included in the result set. This parameter
          takes precedence over end_time if both are specified.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/TweetID'
        example: "1346889436626259968"
      - name: max_results
        in: query
        description: The maximum number of results
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 5
          type: integer
          format: int32
      - name: exclude
        in: query
        description: The set of entities to exclude (e.g. 'replies' or 'retweets')
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The set of entities to exclude (e.g. 'replies' or 'retweets')
          example:
          - replies
          - retweets
          items:
            type: string
            enum:
            - replies
            - retweets
      - name: pagination_token
        in: query
        description: This parameter is used to get the next 'page' of results.
        required: false
        style: form
        explode: true
        schema:
          minLength: 1
          type: string
      - name: start_time
        in: query
        description: YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the
          Tweets will be provided. The since_id parameter takes precedence if it is
          also specified.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2021-02-01T18:40:40.000Z
      - name: end_time
        in: query
        description: YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Tweets
          will be provided. The until_id parameter takes precedence if it is also
          specified.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2021-02-14T18:40:40.000Z
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [Tweet](#Tweet) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          items:
            type: string
            enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
      - name: tweet.fields
        in: query
        description: A comma separated list of Tweet fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [Tweet](#Tweet) object."
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            type: string
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      - name: media.fields
        in: query
        description: A comma separated list of Media fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Media object.
          example:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          - non_public_metrics
          - organic_metrics
          - promoted_metrics
          - alt_text
          - variants
          items:
            type: string
            enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
            - alt_text
            - variants
      - name: place.fields
        in: query
        description: A comma separated list of Place fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Place object.
          example:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          items:
            type: string
            enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
      - name: poll.fields
        in: query
        description: A comma separated list of Poll fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Poll object.
          example:
          - duration_minutes
          - options
          - voting_status
          - end_datetime
          items:
            type: string
            enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericTweetsTimelineResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - tweet.read
        - users.read
  /2/users/{id}/tweets:
    get:
      tags:
      - Tweets
      summary: User Tweets timeline by User ID
      description: Returns a list of Tweets authored by the provided User ID
      operationId: usersIdTweets
      parameters:
      - name: id
        in: path
        description: The ID of the User to list Tweets of
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      - name: since_id
        in: query
        description: The minimum Tweet ID to be included in the result set. This parameter
          takes precedence over start_time if both are specified.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/TweetID'
        example: "791775337160081409"
      - name: until_id
        in: query
        description: The maximum Tweet ID to be included in the result set. This parameter
          takes precedence over end_time if both are specified.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/TweetID'
        example: "1346889436626259968"
      - name: max_results
        in: query
        description: The maximum number of results
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 5
          type: integer
          format: int32
      - name: exclude
        in: query
        description: The set of entities to exclude (e.g. 'replies' or 'retweets')
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The set of entities to exclude (e.g. 'replies' or 'retweets')
          example:
          - replies
          - retweets
          items:
            type: string
            enum:
            - replies
            - retweets
      - name: pagination_token
        in: query
        description: This parameter is used to get the next 'page' of results.
        required: false
        style: form
        explode: true
        schema:
          minLength: 1
          type: string
      - name: start_time
        in: query
        description: YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the
          Tweets will be provided. The since_id parameter takes precedence if it is
          also specified.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2021-02-01T18:40:40.000Z
      - name: end_time
        in: query
        description: YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Tweets
          will be provided. The until_id parameter takes precedence if it is also
          specified.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2021-02-14T18:40:40.000Z
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [Tweet](#Tweet) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          items:
            type: string
            enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
      - name: tweet.fields
        in: query
        description: A comma separated list of Tweet fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [Tweet](#Tweet) object."
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            type: string
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      - name: media.fields
        in: query
        description: A comma separated list of Media fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Media object.
          example:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          - non_public_metrics
          - organic_metrics
          - promoted_metrics
          - alt_text
          - variants
          items:
            type: string
            enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
            - alt_text
            - variants
      - name: place.fields
        in: query
        description: A comma separated list of Place fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Place object.
          example:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          items:
            type: string
            enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
      - name: poll.fields
        in: query
        description: A comma separated list of Poll fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Poll object.
          example:
          - duration_minutes
          - options
          - voting_status
          - end_datetime
          items:
            type: string
            enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericTweetsTimelineResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - UserToken: []
      - OAuth2UserToken:
        - tweet.read
        - users.read
  /2/users/{id}/mentions:
    get:
      tags:
      - Tweets
      summary: User mention timeline by User ID
      description: Returns Tweet objects that mention username associated to the provided
        User ID
      operationId: usersIdMentions
      parameters:
      - name: id
        in: path
        description: The ID of the User to list mentions of
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      - name: since_id
        in: query
        description: The minimum Tweet ID to be included in the result set. This parameter
          takes precedence over start_time if both are specified.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/TweetID'
        example: "791775337160081409"
      - name: until_id
        in: query
        description: The maximum Tweet ID to be included in the result set. This parameter
          takes precedence over end_time if both are specified.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/TweetID'
        example: "1346889436626259968"
      - name: max_results
        in: query
        description: The maximum number of results
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 5
          type: integer
          format: int32
      - name: pagination_token
        in: query
        description: This parameter is used to get the next 'page' of results.
        required: false
        style: form
        explode: true
        schema:
          minLength: 1
          type: string
      - name: start_time
        in: query
        description: YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the
          Tweets will be provided. The since_id parameter takes precedence if it is
          also specified.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2021-02-01T18:40:40.000Z
      - name: end_time
        in: query
        description: YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Tweets
          will be provided. The until_id parameter takes precedence if it is also
          specified.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2021-02-14T18:40:40.000Z
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [Tweet](#Tweet) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          items:
            type: string
            enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
      - name: tweet.fields
        in: query
        description: A comma separated list of Tweet fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [Tweet](#Tweet) object."
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            type: string
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      - name: media.fields
        in: query
        description: A comma separated list of Media fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Media object.
          example:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          - non_public_metrics
          - organic_metrics
          - promoted_metrics
          - alt_text
          - variants
          items:
            type: string
            enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
            - alt_text
            - variants
      - name: place.fields
        in: query
        description: A comma separated list of Place fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Place object.
          example:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          items:
            type: string
            enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
      - name: poll.fields
        in: query
        description: A comma separated list of Poll fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Poll object.
          example:
          - duration_minutes
          - options
          - voting_status
          - end_datetime
          items:
            type: string
            enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericTweetsTimelineResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - UserToken: []
      - OAuth2UserToken:
        - tweet.read
        - users.read
  /2/users/{id}/likes:
    post:
      tags:
      - Tweets
      summary: Causes the user (in the path) to like the specified tweet
      description: Causes the user (in the path) to like the specified tweet. The
        user in the path must match the user context authorizing the request.
      operationId: usersIdLike
      parameters:
      - name: id
        in: path
        description: The ID of the user that is requesting to like the tweet
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersLikesCreateRequest'
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersLikesCreateResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - like.write
  /2/users/{id}/likes/{tweet_id}:
    delete:
      tags:
      - Tweets
      summary: Causes the user (in the path) to unlike the specified tweet
      description: Causes the user (in the path) to unlike the specified tweet. The
        user must match the user context authorizing the request
      operationId: usersIdUnlike
      parameters:
      - name: id
        in: path
        description: The ID of the user that is requesting to unlike the tweet
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      - name: tweet_id
        in: path
        description: The ID of the tweet that the user is requesting to unlike
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/TweetID'
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersLikesDeleteResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - like.write
  /2/users/{id}/liked_tweets:
    get:
      tags:
      - Tweets
      summary: Returns Tweet objects liked by the provided User ID
      description: Returns a list of Tweets liked by the provided User ID
      operationId: usersIdLikedTweets
      parameters:
      - name: id
        in: path
        description: The ID of the User to list the liked Tweets of
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      - name: max_results
        in: query
        description: The maximum number of results
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 5
          type: integer
          format: int32
      - name: pagination_token
        in: query
        description: This parameter is used to get the next 'page' of results.
        required: false
        style: form
        explode: true
        schema:
          minLength: 1
          type: string
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [Tweet](#Tweet) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          items:
            type: string
            enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
      - name: tweet.fields
        in: query
        description: A comma separated list of Tweet fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [Tweet](#Tweet) object."
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            type: string
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      - name: media.fields
        in: query
        description: A comma separated list of Media fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Media object.
          example:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          - non_public_metrics
          - organic_metrics
          - promoted_metrics
          - alt_text
          - variants
          items:
            type: string
            enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
            - alt_text
            - variants
      - name: place.fields
        in: query
        description: A comma separated list of Place fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Place object.
          example:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          items:
            type: string
            enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
      - name: poll.fields
        in: query
        description: A comma separated list of Poll fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Poll object.
          example:
          - duration_minutes
          - options
          - voting_status
          - end_datetime
          items:
            type: string
            enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - like.read
  /2/tweets/{id}/liking_users:
    get:
      tags:
      - Users
      summary: Returns user objects that have liked the provided Tweet ID
      description: Returns a list of users that have liked the provided Tweet ID
      operationId: tweetsIdLikingUsers
      parameters:
      - name: id
        in: path
        description: The ID of the Tweet for which to return results
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/TweetID'
      - name: max_results
        in: query
        description: The maximum number of results
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 100
      - name: pagination_token
        in: query
        description: This parameter is used to get the next 'page' of results.
        required: false
        style: form
        explode: true
        schema:
          minLength: 1
          type: string
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericMultipleUsersLookupResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - like.read
  /2/tweets/{id}/retweeted_by:
    get:
      tags:
      - Users
      summary: Returns user objects that have retweeted the provided Tweet ID
      description: Returns a list of users that have retweeted the provided Tweet
        ID
      operationId: tweetsIdRetweetingUsers
      parameters:
      - name: id
        in: path
        description: The ID of the Tweet for which to return results
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/TweetID'
      - name: max_results
        in: query
        description: The maximum number of results
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 100
      - name: pagination_token
        in: query
        description: This parameter is used to get the next 'page' of results.
        required: false
        style: form
        explode: true
        schema:
          minLength: 1
          type: string
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericMultipleUsersLookupResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - UserToken: []
      - OAuth2UserToken:
        - tweet.read
        - users.read
  /2/users/{id}/retweets:
    post:
      tags:
      - Tweets
      summary: Causes the user (in the path) to retweet the specified tweet
      description: Causes the user (in the path) to retweet the specified tweet. The
        user in the path must match the user context authorizing the request.
      operationId: usersIdRetweets
      parameters:
      - name: id
        in: path
        description: The ID of the user that is requesting to retweet the tweet
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersRetweetsCreateRequest'
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersRetweetsCreateResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - tweet.write
  /2/users/{id}/retweets/{source_tweet_id}:
    delete:
      tags:
      - Tweets
      summary: Causes the user (in the path) to unretweet the specified tweet
      description: Causes the user (in the path) to unretweet the specified tweet.
        The user must match the user context authorizing the request
      operationId: usersIdUnretweets
      parameters:
      - name: id
        in: path
        description: The ID of the user that is requesting to unretweet the tweet
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      - name: source_tweet_id
        in: path
        description: The ID of the tweet that the user is requesting to unretweet
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/TweetID'
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersRetweetsDeleteResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - tweet.write
  /2/tweets/counts/recent:
    get:
      tags:
      - Tweets
      summary: Recent search counts
      description: Returns Tweet Counts from the last 7 days that match a search query.
      operationId: tweetCountsRecentSearch
      parameters:
      - name: query
        in: query
        description: One query/rule/filter for matching Tweets. Refer to https:\/\/t.co\/rulelength
          to identify the max query length
        required: true
        style: form
        explode: true
        schema:
          maxLength: 4096
          minLength: 1
          type: string
          example: (from:TwitterDev OR from:TwitterAPI) has:media -is:retweet
      - name: start_time
        in: query
        description: YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp (from most recent
          7 days) from which the Tweets will be provided. Timestamp is in second granularity
          and is inclusive (i.e. 12:00:01 includes the first second of the minute).
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: end_time
        in: query
        description: "YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp\
          \ to which the Tweets will be provided. Timestamp is in second granularity\
          \ and is exclusive (i.e. 12:00:01 excludes the first second of the minute)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: since_id
        in: query
        description: "Returns results with a Tweet ID greater than (that is, more\
          \ recent than) the specified ID."
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/TweetID'
      - name: until_id
        in: query
        description: "Returns results with a Tweet ID less than (that is, older than)\
          \ the specified ID."
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/TweetID'
      - name: next_token
        in: query
        description: "This parameter is used to get the next 'page' of results. The\
          \ value used with the parameter is pulled directly from the response provided\
          \ by the API, and should not be modified."
        required: false
        style: form
        explode: true
        schema:
          minLength: 1
          type: string
      - name: pagination_token
        in: query
        description: "This parameter is used to get the next 'page' of results. The\
          \ value used with the parameter is pulled directly from the response provided\
          \ by the API, and should not be modified."
        required: false
        style: form
        explode: true
        schema:
          minLength: 1
          type: string
          x-renames-parameter: next_token
          x-version: "[2.36,]"
      - name: granularity
        in: query
        description: The granularity for the search counts results.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Granularity'
      responses:
        "200":
          description: Recent tweet counts response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetCountsResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
  /2/tweets/counts/all:
    get:
      tags:
      - Tweets
      summary: Full archive search counts
      description: Returns Tweet Counts that match a search query.
      operationId: tweetCountsFullArchiveSearch
      parameters:
      - name: query
        in: query
        description: One query/rule/filter for matching Tweets. Refer to https:\/\/t.co\/rulelength
          to identify the max query length
        required: true
        style: form
        explode: true
        schema:
          maxLength: 4096
          minLength: 1
          type: string
          example: (from:TwitterDev OR from:TwitterAPI) has:media -is:retweet
      - name: start_time
        in: query
        description: YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp (from most recent
          7 days) from which the Tweets will be provided. Timestamp is in second granularity
          and is inclusive (i.e. 12:00:01 includes the first second of the minute).
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: end_time
        in: query
        description: "YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp\
          \ to which the Tweets will be provided. Timestamp is in second granularity\
          \ and is exclusive (i.e. 12:00:01 excludes the first second of the minute)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: since_id
        in: query
        description: "Returns results with a Tweet ID greater than (that is, more\
          \ recent than) the specified ID."
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/TweetID'
      - name: until_id
        in: query
        description: "Returns results with a Tweet ID less than (that is, older than)\
          \ the specified ID."
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/TweetID'
      - name: next_token
        in: query
        description: "This parameter is used to get the next 'page' of results. The\
          \ value used with the parameter is pulled directly from the response provided\
          \ by the API, and should not be modified."
        required: false
        style: form
        explode: true
        schema:
          minLength: 1
          type: string
      - name: pagination_token
        in: query
        description: "This parameter is used to get the next 'page' of results. The\
          \ value used with the parameter is pulled directly from the response provided\
          \ by the API, and should not be modified."
        required: false
        style: form
        explode: true
        schema:
          minLength: 1
          type: string
          x-renames-parameter: next_token
          x-version: "[2.36,]"
      - name: granularity
        in: query
        description: The granularity for the search counts results.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Granularity'
      responses:
        "200":
          description: Tweet counts response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetCountsResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
  /2/compliance/jobs:
    get:
      tags:
      - Compliance
      summary: List compliance jobs
      description: Returns recent compliance jobs for a given job type and optional
        job status
      operationId: listBatchComplianceJobs
      parameters:
      - name: type
        in: query
        description: Type of compliance job to list.
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ComplianceJobType'
      - name: status
        in: query
        description: Status of compliance job to list.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ComplianceJobStatus'
      responses:
        "200":
          description: List compliance jobs response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiComplianceJobResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
    post:
      tags:
      - Compliance
      summary: Create compliance job
      description: Creates a compliance for the given job type
      operationId: createBatchComplianceJob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/compliance_jobs_body'
        required: true
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleComplianceJobResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
  /2/compliance/jobs/{id}:
    get:
      tags:
      - Compliance
      summary: Get compliance job
      description: Returns a single compliance job by ID
      operationId: getBatchComplianceJob
      parameters:
      - name: id
        in: path
        description: ID of the compliance job to retrieve.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/JobId'
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleComplianceJobResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
  /2/lists:
    post:
      tags:
      - Lists
      summary: Create List
      description: Creates a new List.
      operationId: listIdCreate
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCreateRequest'
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCreateResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - list.write
        - list.read
  /2/lists/{id}:
    get:
      tags:
      - Lists
      summary: List lookup by List ID
      description: Returns a List
      operationId: listIdGet
      parameters:
      - name: id
        in: path
        description: The ID of the List to get
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ListID'
      - name: list.fields
        in: query
        description: A comma separated list of List fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The fields available for a List object.
          example:
          - created_at
          - description
          - follower_count
          - member_count
          - name
          - private
          items:
            type: string
            enum:
            - created_at
            - description
            - follower_count
            - id
            - member_count
            - name
            - owner_id
            - private
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [List](#List) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - owner_id
          items:
            type: string
            enum:
            - owner_id
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleListLookupResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - list.read
    put:
      tags:
      - Lists
      summary: Update List
      description: Update a List that you own.
      operationId: listIdUpdate
      parameters:
      - name: id
        in: path
        description: The ID of the List to modify
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ListID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUpdateRequest'
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUpdateResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - list.write
    delete:
      tags:
      - Lists
      summary: Delete List
      description: Delete a List that you own.
      operationId: listIdDelete
      parameters:
      - name: id
        in: path
        description: The ID of the List to delete
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ListID'
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeleteResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - list.write
  /2/lists/{id}/followers:
    get:
      tags:
      - Users
      summary: Returns user objects that follow a List by the provided List ID
      description: Returns a list of users that follow a List by the provided List
        ID
      operationId: listGetFollowers
      parameters:
      - name: id
        in: path
        description: The ID of the List for which to return followers
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ListID'
      - name: max_results
        in: query
        description: The maximum number of results
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 100
      - name: pagination_token
        in: query
        description: This parameter is used to get a specified 'page' of results.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [User](#User) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - pinned_tweet_id
          items:
            type: string
            enum:
            - pinned_tweet_id
      - name: tweet.fields
        in: query
        description: A comma separated list of Tweet fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [Tweet](#Tweet) object."
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            type: string
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLookupMultipleUsersLookupResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - list.read
  /2/lists/{id}/members:
    get:
      tags:
      - Users
      summary: Returns user objects that are members of a List by the provided List
        ID
      description: Returns a list of users that are members of a List by the provided
        List ID
      operationId: listGetMembers
      parameters:
      - name: id
        in: path
        description: The ID of the List for which to return members
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ListID'
      - name: max_results
        in: query
        description: The maximum number of results
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 100
      - name: pagination_token
        in: query
        description: This parameter is used to get a specified 'page' of results.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [User](#User) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - pinned_tweet_id
          items:
            type: string
            enum:
            - pinned_tweet_id
      - name: tweet.fields
        in: query
        description: A comma separated list of Tweet fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [Tweet](#Tweet) object."
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            type: string
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLookupMultipleUsersLookupResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - list.read
    post:
      tags:
      - Lists
      summary: Add a List member
      description: Causes a user to become a member of a List.
      operationId: listAddMember
      parameters:
      - name: id
        in: path
        description: The ID of the List to add a member
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ListID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAddMemberRequest'
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMemberResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - list.write
  /2/lists/{id}/members/{user_id}:
    delete:
      tags:
      - Lists
      summary: Remove a List member
      description: Causes a user to be removed from the members of a List.
      operationId: listRemoveMember
      parameters:
      - name: id
        in: path
        description: The ID of the List to remove a member
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ListID'
      - name: user_id
        in: path
        description: The ID of user that will be removed from the List
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserID'
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMemberResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - list.write
  /2/lists/{id}/tweets:
    get:
      tags:
      - Tweets
      summary: List Tweets timeline by List ID
      description: Returns a list of Tweets associated with the provided List ID
      operationId: listsIdTweets
      parameters:
      - name: id
        in: path
        description: The ID of the List to list Tweets of
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ListID'
      - name: max_results
        in: query
        description: The maximum number of results
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 100
      - name: pagination_token
        in: query
        description: This parameter is used to get the next 'page' of results.
        required: false
        style: form
        explode: true
        schema:
          minLength: 1
          type: string
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [Tweet](#Tweet) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          items:
            type: string
            enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
      - name: tweet.fields
        in: query
        description: A comma separated list of Tweet fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [Tweet](#Tweet) object."
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            type: string
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      - name: media.fields
        in: query
        description: A comma separated list of Media fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Media object.
          example:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          - non_public_metrics
          - organic_metrics
          - promoted_metrics
          - alt_text
          - variants
          items:
            type: string
            enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
            - alt_text
            - variants
      - name: place.fields
        in: query
        description: A comma separated list of Place fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Place object.
          example:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          items:
            type: string
            enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
      - name: poll.fields
        in: query
        description: A comma separated list of Poll fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of fields you can display for a Poll object.
          example:
          - duration_minutes
          - options
          - voting_status
          - end_datetime
          items:
            type: string
            enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - list.read
  /2/spaces/{id}:
    get:
      tags:
      - Spaces
      summary: Space lookup by Space ID
      description: Returns a variety of information about the Space specified by the
        requested ID
      operationId: findSpaceById
      parameters:
      - name: id
        in: path
        description: The space id to be retrieved
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/SpaceID'
      - name: space.fields
        in: query
        description: A comma separated list of Space fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The fields available for a Space object.
          example:
          - created_at
          - creator_id
          - host_ids
          - invited_user_ids
          - is_ticketed
          - lang
          - participant_count
          - scheduled_start
          - speaker_ids
          - started_at
          - title
          - updated_at
          items:
            type: string
            enum:
            - created_at
            - creator_id
            - host_ids
            - invited_user_ids
            - is_ticketed
            - lang
            - participant_count
            - scheduled_start
            - speaker_ids
            - started_at
            - title
            - updated_at
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [Space](#Space) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - creator_id
          - host_ids
          - invited_user_ids
          - speaker_ids
          items:
            type: string
            enum:
            - creator_id
            - host_ids
            - invited_user_ids
            - speaker_ids
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleSpaceLookupResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - space.read
  /2/spaces:
    get:
      tags:
      - Spaces
      summary: Space lookup up Space IDs
      description: Returns a variety of information about the Spaces specified by
        the requested IDs
      operationId: findSpacesByIds
      parameters:
      - name: ids
        in: query
        description: A list of space ids
        required: true
        style: form
        explode: true
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/SpaceID'
      - name: space.fields
        in: query
        description: A comma separated list of Space fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The fields available for a Space object.
          example:
          - created_at
          - creator_id
          - host_ids
          - invited_user_ids
          - is_ticketed
          - lang
          - participant_count
          - scheduled_start
          - speaker_ids
          - started_at
          - title
          - updated_at
          items:
            type: string
            enum:
            - created_at
            - creator_id
            - host_ids
            - invited_user_ids
            - is_ticketed
            - lang
            - participant_count
            - scheduled_start
            - speaker_ids
            - started_at
            - title
            - updated_at
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [Space](#Space) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - creator_id
          - host_ids
          - invited_user_ids
          - speaker_ids
          items:
            type: string
            enum:
            - creator_id
            - host_ids
            - invited_user_ids
            - speaker_ids
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiSpaceLookupResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - space.read
  /2/spaces/by/creator_ids:
    get:
      tags:
      - Spaces
      summary: Space lookup by their creators
      description: Returns a variety of information about the Spaces created by the
        provided User IDs
      operationId: findSpacesByCreatorIds
      parameters:
      - name: user_ids
        in: query
        description: The users to search through
        required: true
        style: form
        explode: true
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/UserID'
      - name: space.fields
        in: query
        description: A comma separated list of Space fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The fields available for a Space object.
          example:
          - created_at
          - creator_id
          - host_ids
          - invited_user_ids
          - is_ticketed
          - lang
          - participant_count
          - scheduled_start
          - speaker_ids
          - started_at
          - title
          - updated_at
          items:
            type: string
            enum:
            - created_at
            - creator_id
            - host_ids
            - invited_user_ids
            - is_ticketed
            - lang
            - participant_count
            - scheduled_start
            - speaker_ids
            - started_at
            - title
            - updated_at
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [Space](#Space) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - creator_id
          - host_ids
          - invited_user_ids
          - speaker_ids
          items:
            type: string
            enum:
            - creator_id
            - host_ids
            - invited_user_ids
            - speaker_ids
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiSpaceLookupResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - space.read
  /2/spaces/search:
    get:
      tags:
      - Spaces
      summary: Search for Spaces
      description: Returns Spaces that match the provided query.
      operationId: searchSpaces
      parameters:
      - name: query
        in: query
        description: The search query
        required: true
        style: form
        explode: true
        schema:
          type: string
          description: The query to use in the Spaces search endpoint
          example: crypto
        example: crypto
      - name: state
        in: query
        description: The state of spaces to search for
        required: false
        style: form
        explode: true
        schema:
          type: string
          description: The current state of the space.
          example: live
          enum:
          - live
          - scheduled
          - all
          default: all
      - name: max_results
        in: query
        description: The number of results to return. The maximum for this value is
          100.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: space.fields
        in: query
        description: A comma separated list of Space fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: The fields available for a Space object.
          example:
          - created_at
          - creator_id
          - host_ids
          - invited_user_ids
          - is_ticketed
          - lang
          - participant_count
          - scheduled_start
          - speaker_ids
          - started_at
          - title
          - updated_at
          items:
            type: string
            enum:
            - created_at
            - creator_id
            - host_ids
            - invited_user_ids
            - is_ticketed
            - lang
            - participant_count
            - scheduled_start
            - speaker_ids
            - started_at
            - title
            - updated_at
      - name: expansions
        in: query
        description: A comma separated list of fields to expand.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can expand for a [Space](#Space) object.\
            \ If the field has an ID, it can be expanded into a full object."
          example:
          - creator_id
          - host_ids
          - invited_user_ids
          - speaker_ids
          items:
            type: string
            enum:
            - creator_id
            - host_ids
            - invited_user_ids
            - speaker_ids
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiSpaceLookupResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - space.read
  /2/spaces/{id}/tweets:
    get:
      tags:
      - Spaces
      - Tweets
      summary: Retrieve tweets from a Space
      description: Retrieves tweets shared in the specified space
      operationId: spaceTweets
      parameters:
      - name: max_results
        in: query
        description: "The number of tweets to fetch from the provided space. If not\
          \ provided, the value will default to the maximum of 100"
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: id
        in: path
        description: The space id from which tweets will be retrieved
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/SpaceID'
        example: 1YqKDqWqdPLsV
      - name: tweet.fields
        in: query
        description: A comma separated list of Tweet fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [Tweet](#Tweet) object."
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            type: string
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiTweetLookupResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - space.read
  /2/spaces/{id}/buyers:
    get:
      tags:
      - Spaces
      - Tweets
      summary: Retrieve the list of users who purchased a ticket to the given space
      description: Retrieves the list of users who purchased a ticket to the given
        space
      operationId: spaceBuyers
      parameters:
      - name: id
        in: path
        description: The space id from which tweets will be retrieved
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/SpaceID'
        example: 1YqKDqWqdPLsV
      - name: user.fields
        in: query
        description: A comma separated list of User fields to display.
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          description: "The list of fields you can display for a [User](#User) object."
          example:
          - username
          - verified
          - profile_image_url
          items:
            type: string
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
      responses:
        "200":
          description: The request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiUserLookupResponse'
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
      - BearerToken: []
      - UserToken: []
      - OAuth2UserToken:
        - users.read
        - tweet.read
        - space.read
components:
  schemas:
    MediaHeight:
      minimum: 0
      type: integer
      description: The height of the media in pixels
    MediaWidth:
      minimum: 0
      type: integer
      description: The width of the media in pixels
    HTTPStatusCode:
      maximum: 599
      minimum: 100
      type: integer
      description: HTTP Status Code.
    ContextAnnotation:
      required:
      - domain
      - entity
      type: object
      properties:
        domain:
          $ref: '#/components/schemas/ContextAnnotationDomainFields'
        entity:
          $ref: '#/components/schemas/ContextAnnotationEntityFields'
      description: Annotation inferred from the tweet text.
    ContextAnnotationDomainFields:
      required:
      - id
      type: object
      properties:
        id:
          pattern: "^[0-9]{1,19}$"
          type: string
          description: The unique id for a context annotation domain.
        name:
          type: string
          description: Name of the context annotation domain.
        description:
          type: string
          description: Description of the context annotation domain.
      description: Represents the data for the context annotation domain.
    ContextAnnotationEntityFields:
      required:
      - id
      type: object
      properties:
        id:
          pattern: "^[0-9]{1,19}$"
          type: string
          description: The unique id for a context annotation entity.
        name:
          type: string
          description: Name of the context annotation entity.
        description:
          type: string
          description: Description of the context annotation entity.
      description: Represents the data for the context annotation entity.
    URL:
      type: string
      description: A validly formatted URL.
      format: uri
      example: https://developer.twitter.com/en/docs/twitter-api
    EntityIndicesInclusiveExclusive:
      required:
      - end
      - start
      type: object
      properties:
        start:
          minimum: 0
          type: integer
          description: Index (zero-based) at which position this entity starts.  The
            index is inclusive.
          example: 50
        end:
          minimum: 0
          type: integer
          description: Index (zero-based) at which position this entity ends.  The
            index is exclusive.
          example: 61
      description: "Represent a boundary range (start and end index) for a recognized\
        \ entity (for example a hashtag or a mention). `start` must be smaller than\
        \ `end`.  The start index is inclusive, the end index is exclusive."
    EntityIndicesInclusiveInclusive:
      required:
      - end
      - start
      type: object
      properties:
        start:
          minimum: 0
          type: integer
          description: Index (zero-based) at which position this entity starts.  The
            index is inclusive.
          example: 50
        end:
          minimum: 0
          type: integer
          description: Index (zero-based) at which position this entity ends.  The
            index is inclusive.
          example: 61
      description: "Represent a boundary range (start and end index) for a recognized\
        \ entity (for example a hashtag or a mention). `start` must be smaller than\
        \ `end`.  The start index is inclusive, the end index is inclusive."
    URLFields:
      required:
      - url
      type: object
      properties:
        url:
          $ref: '#/components/schemas/URL'
        expanded_url:
          $ref: '#/components/schemas/URL'
        display_url:
          type: string
          description: The URL as displayed in the Twitter client.
          example: twittercommunity.com/t/introducing-…
        unwound_url:
          type: string
          description: Fully resolved url
          format: uri
          example: https://twittercommunity.com/t/introducing-the-v2-follow-lookup-endpoints/147118
        status:
          $ref: '#/components/schemas/HTTPStatusCode'
        title:
          type: string
          description: Title of the page the URL points to.
          example: Introducing the v2 follow lookup endpoints
        description:
          type: string
          description: Description of the URL landing page.
          example: This is a description of the website.
        images:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/URLImage'
        media_key:
          $ref: '#/components/schemas/MediaKey'
      description: Represent the portion of text recognized as a URL.
    UrlEntity:
      description: "Represent the portion of text recognized as a URL, and its start\
        \ and end position within the text."
      allOf:
      - $ref: '#/components/schemas/EntityIndicesInclusiveExclusive'
      - $ref: '#/components/schemas/URLFields'
    URLImage:
      type: object
      properties:
        url:
          $ref: '#/components/schemas/URL'
        height:
          $ref: '#/components/schemas/MediaHeight'
        width:
          $ref: '#/components/schemas/MediaWidth'
      description: Represent the information for the URL image
    HashtagFields:
      required:
      - tag
      type: object
      properties:
        tag:
          type: string
          description: The text of the Hashtag
          example: MondayMotivation
      description: "Represent the portion of text recognized as a Hashtag, and its\
        \ start and end position within the text."
    HashtagEntity:
      allOf:
      - $ref: '#/components/schemas/EntityIndicesInclusiveExclusive'
      - $ref: '#/components/schemas/HashtagFields'
    CashtagFields:
      required:
      - tag
      type: object
      properties:
        tag:
          type: string
          example: TWTR
      description: "Represent the portion of text recognized as a Cashtag, and its\
        \ start and end position within the text."
    CashtagEntity:
      allOf:
      - $ref: '#/components/schemas/EntityIndicesInclusiveExclusive'
      - $ref: '#/components/schemas/CashtagFields'
    MentionFields:
      required:
      - id
      - username
      type: object
      properties:
        username:
          $ref: '#/components/schemas/UserName'
        id:
          $ref: '#/components/schemas/UserID'
      description: "Represent the portion of text recognized as a User mention, and\
        \ its start and end position within the text."
    MentionEntity:
      allOf:
      - $ref: '#/components/schemas/EntityIndicesInclusiveExclusive'
      - $ref: '#/components/schemas/MentionFields'
    FullTextEntities:
      type: object
      properties:
        urls:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/UrlEntity'
        hashtags:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/HashtagEntity'
        mentions:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/MentionEntity'
        cashtags:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/CashtagEntity'
    TweetID:
      pattern: "^[0-9]{1,19}$"
      type: string
      description: Unique identifier of this Tweet. This is returned as a string in
        order to avoid complications with languages and tools that cannot handle large
        integers.
      example: "1346889436626259968"
    TweetText:
      type: string
      description: The content of the Tweet.
      example: Learn how to use the user Tweet timeline and user mention timeline
        endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
    UserID:
      pattern: "^[0-9]{1,19}$"
      type: string
      description: Unique identifier of this User. This is returned as a string in
        order to avoid complications with languages and tools that cannot handle large
        integers.
      example: "2244994945"
    SpaceID:
      pattern: "^[a-zA-Z0-9]{1,13}$"
      type: string
      description: The unique identifier of this Space.
      example: 1SLjjRYNejbKM
    ReplySettings:
      pattern: "^[A-Za-z]{1,12}$"
      type: string
      description: "Shows who can reply a Tweet. Fields returned are everyone, mentioned_users,\
        \ and following."
      enum:
      - everyone
      - mentionedUsers
      - following
      - other
    Error:
      required:
      - code
      - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Expansions:
      type: object
      properties:
        users:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/User'
        tweets:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Tweet'
        places:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Place'
        media:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Media'
        polls:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Poll'
      example:
        places:
        - geo:
            bbox:
            - -105.193475
            - 39.60973
            - -105.053164
            - 39.761974
            geometry:
              coordinates:
              - -105.18816086351444
              - 40.247749999999996
              type: Point
            type: Feature
            properties: {}
          country_code: US
          country: United States
          contained_within:
          - null
          - null
          full_name: "Lakewood, CO"
          place_type: city
          name: Lakewood
          id: f7eb2fa2fea288b1
        - geo:
            bbox:
            - -105.193475
            - 39.60973
            - -105.053164
            - 39.761974
            geometry:
              coordinates:
              - -105.18816086351444
              - 40.247749999999996
              type: Point
            type: Feature
            properties: {}
          country_code: US
          country: United States
          contained_within:
          - null
          - null
          full_name: "Lakewood, CO"
          place_type: city
          name: Lakewood
          id: f7eb2fa2fea288b1
        polls:
        - voting_status: open
          duration_minutes: 5
          end_datetime: 2000-01-23T04:56:07.000+00:00
          options:
          - votes: 5
            position: 1
            label: label
          - votes: 5
            position: 1
            label: label
          - votes: 5
            position: 1
            label: label
          - votes: 5
            position: 1
            label: label
          id: "1365059861688410112"
        - voting_status: open
          duration_minutes: 5
          end_datetime: 2000-01-23T04:56:07.000+00:00
          options:
          - votes: 5
            position: 1
            label: label
          - votes: 5
            position: 1
            label: label
          - votes: 5
            position: 1
            label: label
          - votes: 5
            position: 1
            label: label
          id: "1365059861688410112"
        media:
        - width: 0
          type: type
          media_key: media_key
          height: 0
        - width: 0
          type: type
          media_key: media_key
          height: 0
        tweets:
        - id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        - id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        users:
        - null
        - null
    Tweet:
      required:
      - id
      - text
      type: object
      properties:
        id:
          $ref: '#/components/schemas/TweetID'
        created_at:
          type: string
          description: Creation time of the Tweet.
          format: date-time
          example: 2021-01-06T18:40:40Z
        text:
          $ref: '#/components/schemas/TweetText'
        author_id:
          $ref: '#/components/schemas/UserID'
        in_reply_to_user_id:
          $ref: '#/components/schemas/UserID'
        conversation_id:
          $ref: '#/components/schemas/TweetID'
        reply_settings:
          $ref: '#/components/schemas/ReplySettings'
        referenced_tweets:
          minItems: 1
          type: array
          description: "A list of Tweets this Tweet refers to. For example, if the\
            \ parent Tweet is a Retweet, a Quoted Tweet or a Reply, it will include\
            \ the related Tweet referenced to by its parent."
          items:
            $ref: '#/components/schemas/Tweet_referenced_tweets'
        attachments:
          $ref: '#/components/schemas/Tweet_attachments'
        context_annotations:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ContextAnnotation'
        withheld:
          $ref: '#/components/schemas/TweetWithheld'
        geo:
          $ref: '#/components/schemas/Tweet_geo'
        entities:
          $ref: '#/components/schemas/FullTextEntities'
        public_metrics:
          $ref: '#/components/schemas/Tweet_public_metrics'
        possibly_sensitive:
          type: boolean
          description: "Indicates if this Tweet contains URLs marked as sensitive,\
            \ for example content suitable for mature audiences."
          example: false
        lang:
          type: string
          description: "Language of the Tweet, if detected by Twitter. Returned as\
            \ a BCP47 language tag."
          example: en
        source:
          type: string
          description: The name of the app the user Tweeted from.
        non_public_metrics:
          $ref: '#/components/schemas/Tweet_non_public_metrics'
        promoted_metrics:
          $ref: '#/components/schemas/Tweet_promoted_metrics'
        organic_metrics:
          $ref: '#/components/schemas/Tweet_organic_metrics'
      example:
        id: "1346889436626259968"
        created_at: Wed Jan 06 18:40:40 +0000 2021
        text: Learn how to use the user Tweet timeline and user mention timeline endpoints
          in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
        author_id: "2244994945"
    User:
      required:
      - id
      - name
      - username
      properties:
        id:
          $ref: '#/components/schemas/UserID'
        created_at:
          type: string
          description: Creation time of this user.
          format: date-time
        name:
          type: string
          description: "The friendly name of this user, as shown on their profile."
        username:
          $ref: '#/components/schemas/UserName'
        protected:
          type: boolean
          description: "Indicates if this user has chosen to protect their Tweets\
            \ (in other words, if this user's Tweets are private)."
        verified:
          type: boolean
          description: Indicate if this user is a verified Twitter User.
        withheld:
          $ref: '#/components/schemas/UserWithheld'
        profile_image_url:
          type: string
          description: The URL to the profile image for this user.
          format: uri
        location:
          type: string
          description: "The location specified in the user's profile, if the user\
            \ provided one. As this is a freeform value, it may not indicate a valid\
            \ location, but it may be fuzzily evaluated when performing searches with\
            \ location queries."
        url:
          type: string
          description: The URL specified in the user's profile.
        description:
          type: string
          description: "The text of this user's profile description (also known as\
            \ bio), if the user provided one."
        entities:
          $ref: '#/components/schemas/User_entities'
        pinned_tweet_id:
          $ref: '#/components/schemas/TweetID'
        public_metrics:
          $ref: '#/components/schemas/User_public_metrics'
      description: The Twitter User object
      example:
        id: "2244994945"
        created_at: 2013-12-14T04:35:55Z
        name: Twitter Dev
        username: TwitterDev
        protected: false
    UserName:
      pattern: "^[A-Za-z0-9_]{1,15}$"
      type: string
      description: The Twitter handle (screen name) of this user.
    MultiUserLookupResponse:
      type: object
      properties:
        data:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/User'
        includes:
          $ref: '#/components/schemas/Expansions'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
        - id: "2244994945"
          created_at: 2013-12-14T04:35:55Z
          name: Twitter Dev
          username: TwitterDev
          protected: false
        - id: "2244994945"
          created_at: 2013-12-14T04:35:55Z
          name: Twitter Dev
          username: TwitterDev
          protected: false
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - null
          - null
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    SingleUserLookupResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
        includes:
          $ref: '#/components/schemas/Expansions'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
          id: "2244994945"
          created_at: 2013-12-14T04:35:55Z
          name: Twitter Dev
          username: TwitterDev
          protected: false
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - null
          - null
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    MultiTweetLookupResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Tweet'
        includes:
          $ref: '#/components/schemas/Expansions'
        meta:
          $ref: '#/components/schemas/MultiTweetLookupResponse_meta'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
        - id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        - id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        meta:
          result_count: 0
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - null
          - null
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    QuoteTweetLookupResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Tweet'
        includes:
          $ref: '#/components/schemas/Expansions'
        meta:
          $ref: '#/components/schemas/QuoteTweetLookupResponse_meta'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
        - id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        - id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        meta:
          next_token: next_token
          result_count: 0
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - null
          - null
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    SingleTweetLookupResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Tweet'
        includes:
          $ref: '#/components/schemas/Expansions'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
          id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - null
          - null
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    Point:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
          example: Point
          enum:
          - Point
        coordinates:
          $ref: '#/components/schemas/Position'
      description: "A [GeoJson Point](https://tools.ietf.org/html/rfc7946#section-3.1.2)\
        \ geometry object."
      example:
        coordinates:
        - -105.18816086351444
        - 40.247749999999996
        type: Point
    Position:
      maxItems: 2
      minItems: 2
      type: array
      description: "A [GeoJson Position](https://tools.ietf.org/html/rfc7946#section-3.1.1)\
        \ in the format `[longitude,latitude]`."
      example:
      - -105.18816086351444
      - 40.247749999999996
      items:
        type: number
      x-schema-name: Position
    Geo:
      required:
      - bbox
      - properties
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - Feature
        bbox:
          maxItems: 4
          minItems: 4
          type: array
          example:
          - -105.193475
          - 39.60973
          - -105.053164
          - 39.761974
          items:
            maximum: 180
            minimum: -180
            type: number
            format: double
        geometry:
          $ref: '#/components/schemas/Point'
        properties:
          type: object
      example:
        bbox:
        - -105.193475
        - 39.60973
        - -105.053164
        - 39.761974
        geometry:
          coordinates:
          - -105.18816086351444
          - 40.247749999999996
          type: Point
        type: Feature
        properties: {}
    PlaceId:
      type: string
      description: The identifier for this place
      example: f7eb2fa2fea288b1
    Place:
      required:
      - full_name
      - id
      properties:
        id:
          $ref: '#/components/schemas/PlaceId'
        name:
          type: string
          description: The human readable name of this place.
          example: Lakewood
        country_code:
          $ref: '#/components/schemas/CountryCode'
        place_type:
          $ref: '#/components/schemas/PlaceType'
        full_name:
          type: string
          description: The full name of this place.
          example: "Lakewood, CO"
        country:
          type: string
          description: The full name of the county in which this place exists.
          example: United States
        contained_within:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/PlaceId'
        geo:
          $ref: '#/components/schemas/Geo'
      example:
        geo:
          bbox:
          - -105.193475
          - 39.60973
          - -105.053164
          - 39.761974
          geometry:
            coordinates:
            - -105.18816086351444
            - 40.247749999999996
            type: Point
          type: Feature
          properties: {}
        country_code: US
        country: United States
        contained_within:
        - null
        - null
        full_name: "Lakewood, CO"
        place_type: city
        name: Lakewood
        id: f7eb2fa2fea288b1
    PlaceType:
      type: string
      example: city
      enum:
      - poi
      - neighborhood
      - city
      - admin
      - country
      - unknown
    Poll:
      required:
      - id
      - options
      type: object
      properties:
        id:
          $ref: '#/components/schemas/PollId'
        options:
          maxItems: 4
          minItems: 2
          type: array
          items:
            $ref: '#/components/schemas/PollOption'
        voting_status:
          type: string
          enum:
          - open
          - closed
        end_datetime:
          type: string
          format: date-time
        duration_minutes:
          type: integer
      description: Represent a Poll attached to a Tweet
      example:
        voting_status: open
        duration_minutes: 5
        end_datetime: 2000-01-23T04:56:07.000+00:00
        options:
        - votes: 5
          position: 1
          label: label
        - votes: 5
          position: 1
          label: label
        - votes: 5
          position: 1
          label: label
        - votes: 5
          position: 1
          label: label
        id: "1365059861688410112"
    PollId:
      pattern: "^[0-9]{1,19}$"
      type: string
      description: Unique identifier of this poll.
      example: "1365059861688410112"
    PollOption:
      required:
      - label
      - position
      - votes
      type: object
      properties:
        position:
          type: integer
          description: Position of this choice in the poll.
        label:
          $ref: '#/components/schemas/PollOptionLabel'
        votes:
          type: integer
          description: Number of users who voted for this choice.
      description: Describes a choice in a Poll object.
      example:
        votes: 5
        position: 1
        label: label
    PollOptionLabel:
      maxLength: 25
      minLength: 1
      type: string
      description: The text of a poll choice.
    DurationMinutes:
      maximum: 10080
      minimum: 5
      type: integer
      description: Duration of the poll in minutes.
      format: int32
    List:
      required:
      - id
      - name
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ListID'
        name:
          type: string
          description: The name of this List.
        created_at:
          type: string
          format: date-time
        description:
          type: string
        follower_count:
          type: integer
        member_count:
          type: integer
        owner_id:
          $ref: '#/components/schemas/UserID'
        private:
          type: boolean
      description: A Twitter List is a curated group of accounts.
      example:
        private: true
        owner_id: "2244994945"
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        id: "1146654567674912769"
        member_count: 6
        follower_count: 0
    ListID:
      pattern: "^[0-9]{1,19}$"
      type: string
      description: The unique identifier of this List.
      example: "1146654567674912769"
    ListCreateRequest:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        private:
          type: boolean
    ListCreateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/List'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
          private: true
          owner_id: "2244994945"
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: "1146654567674912769"
          member_count: 6
          follower_count: 0
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    ListDeleteResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ListDeleteResponse_data'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
          deleted: true
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    ListUpdateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        private:
          type: boolean
    ListUpdateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ListUpdateResponse_data'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
          updated: true
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    ListAddMemberRequest:
      type: object
      properties:
        user_id:
          $ref: '#/components/schemas/UserID'
    ListMemberResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ListMemberResponse_data'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
          is_member: true
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    ListFollowRequest:
      type: object
      properties:
        list_id:
          $ref: '#/components/schemas/ListID'
    ListFollowedResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ListFollowedResponse_data'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
          following: true
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    ListPinRequest:
      type: object
      properties:
        list_id:
          $ref: '#/components/schemas/ListID'
    ListPinnedResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ListPinnedResponse_data'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
          pinned: true
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    SingleListLookupResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/List'
        includes:
          $ref: '#/components/schemas/SingleListLookupResponse_includes'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
          private: true
          owner_id: "2244994945"
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: "1146654567674912769"
          member_count: 6
          follower_count: 0
        includes:
          users:
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    MultiListResponse:
      type: object
      properties:
        data:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/List'
        includes:
          $ref: '#/components/schemas/SingleListLookupResponse_includes'
        meta:
          $ref: '#/components/schemas/MultiListResponse_meta'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
        - private: true
          owner_id: "2244994945"
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: "1146654567674912769"
          member_count: 6
          follower_count: 0
        - private: true
          owner_id: "2244994945"
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: "1146654567674912769"
          member_count: 6
          follower_count: 0
        meta:
          previous_token: previous_token
          next_token: next_token
          result_count: 1
        includes:
          users:
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    MultiListNoPaginationResponse:
      type: object
      properties:
        data:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/List'
        meta:
          $ref: '#/components/schemas/MultiListNoPaginationResponse_meta'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
        - private: true
          owner_id: "2244994945"
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: "1146654567674912769"
          member_count: 6
          follower_count: 0
        - private: true
          owner_id: "2244994945"
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: "1146654567674912769"
          member_count: 6
          follower_count: 0
        meta:
          result_count: 0
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    AddBookmarkRequest:
      required:
      - tweet_id
      type: object
      properties:
        tweet_id:
          $ref: '#/components/schemas/TweetID'
    BookmarkMutationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/BookmarkMutationResponse_data'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
          bookmarked: true
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    TweetDeleteResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TweetDeleteResponse_data'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
          deleted: true
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    TweetCreateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TweetCreateResponse_data'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
          id: "1346889436626259968"
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    Media:
      required:
      - type
      properties:
        type:
          type: string
        media_key:
          $ref: '#/components/schemas/MediaKey'
        height:
          $ref: '#/components/schemas/MediaHeight'
        width:
          $ref: '#/components/schemas/MediaWidth'
      example:
        width: 0
        type: type
        media_key: media_key
        height: 0
      discriminator:
        propertyName: type
        mapping:
          photo: '#/components/schemas/Photo'
          video: '#/components/schemas/Video'
          animated_gif: '#/components/schemas/AnimatedGif'
    MediaId:
      pattern: "^[0-9]{1,19}$"
      type: string
      description: The unique identifier of this Media.
      example: "1146654567674912769"
    Photo:
      type: object
      allOf:
      - $ref: '#/components/schemas/Media'
      - type: object
        properties:
          url:
            type: string
            format: uri
          alt_text:
            type: string
    Video:
      type: object
      allOf:
      - $ref: '#/components/schemas/Media'
      - type: object
        properties:
          preview_image_url:
            type: string
            format: uri
          duration_ms:
            type: integer
          variants:
            type: array
            description: An array of all available variants of the media
            items:
              $ref: '#/components/schemas/Video_variants'
          public_metrics:
            $ref: '#/components/schemas/Video_public_metrics'
          non_public_metrics:
            $ref: '#/components/schemas/Video_non_public_metrics'
          organic_metrics:
            $ref: '#/components/schemas/Video_organic_metrics'
          promoted_metrics:
            $ref: '#/components/schemas/Video_promoted_metrics'
    AnimatedGif:
      type: object
      allOf:
      - $ref: '#/components/schemas/Media'
      - type: object
        properties:
          preview_image_url:
            type: string
            format: uri
          variants:
            type: array
            description: An array of all available variants of the media
            items:
              $ref: '#/components/schemas/Video_variants'
    MediaKey:
      pattern: "^([0-9]+)_([0-9]+)$"
      type: string
      description: The Media Key identifier for this attachment.
    TweetWithheld:
      required:
      - copyright
      - country_codes
      type: object
      properties:
        copyright:
          type: boolean
          description: Indicates if the content is being withheld for on the basis
            of copyright infringement.
        country_codes:
          minItems: 1
          uniqueItems: true
          type: array
          description: Provides a list of countries where this content is not available.
          items:
            $ref: '#/components/schemas/CountryCode'
        scope:
          type: string
          description: Indicates whether the content being withheld is the `tweet`
            or a `user`.
          enum:
          - tweet
          - user
      description: "Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country)."
    UserWithheld:
      required:
      - country_codes
      type: object
      properties:
        country_codes:
          minItems: 1
          uniqueItems: true
          type: array
          description: Provides a list of countries where this content is not available.
          items:
            $ref: '#/components/schemas/CountryCode'
        scope:
          type: string
          description: Indicates that the content being withheld is a `user`.
          enum:
          - user
      description: "Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country)."
    CountryCode:
      pattern: "^[A-Z]{2}$"
      type: string
      description: A two-letter ISO 3166-1 alpha-2 country code
      example: US
    GenericProblem:
      description: A generic problem with no additional information beyond that provided
        by the HTTP status code.
      allOf:
      - $ref: '#/components/schemas/Problem'
    InvalidRequestProblem:
      description: A problem that indicates this request is invalid.
      allOf:
      - $ref: '#/components/schemas/Problem'
      - type: object
        properties:
          errors:
            type: array
            items:
              $ref: '#/components/schemas/InvalidRequestProblem_errors'
    ResourceNotFoundProblem:
      description: "A problem that indicates that a given Tweet, User, etc. does not\
        \ exist."
      allOf:
      - $ref: '#/components/schemas/Problem'
      - required:
        - parameter
        - resource_id
        - resource_type
        - value
        properties:
          parameter:
            minLength: 1
            type: string
          value:
            description: Value will match the schema of the field.
          resource_id:
            type: string
          resource_type:
            type: string
            enum:
            - user
            - tweet
            - media
            - list
            - space
    ResourceUnauthorizedProblem:
      type: object
      description: "A problem that indicates you are not allowed to see a particular\
        \ Tweet, User, etc."
      allOf:
      - $ref: '#/components/schemas/Problem'
      - required:
        - parameter
        - resource_id
        - resource_type
        - section
        - value
        type: object
        properties:
          value:
            type: string
          parameter:
            type: string
          section:
            type: string
            enum:
            - data
            - includes
          resource_id:
            type: string
          resource_type:
            type: string
            enum:
            - tweet
            - user
            - media
            - list
            - space
    ResourceUnavailableProblem:
      description: "A problem that indicates a particular Tweet, User, etc. is not\
        \ available to you."
      allOf:
      - $ref: '#/components/schemas/Problem'
      - required:
        - parameter
        - resource_id
        - resource_type
        properties:
          parameter:
            minLength: 1
            type: string
          resource_id:
            type: string
          resource_type:
            type: string
            enum:
            - user
            - tweet
            - media
            - list
            - space
    FieldUnauthorizedProblem:
      type: object
      description: "A problem that indicates that you are not allowed to see a particular\
        \ field on a Tweet, User, etc."
      allOf:
      - $ref: '#/components/schemas/Problem'
      - required:
        - field
        - resource_type
        - section
        type: object
        properties:
          section:
            type: string
            enum:
            - data
            - includes
          resource_type:
            type: string
            enum:
            - tweet
            - user
            - media
            - list
            - space
          field:
            type: string
    ClientForbiddenProblem:
      type: object
      description: A problem that indicates your client is forbidden from making this
        request.
      allOf:
      - $ref: '#/components/schemas/Problem'
      - type: object
        properties:
          reason:
            type: string
            enum:
            - official-client-forbidden
            - client-not-enrolled
          registration_url:
            type: string
            format: uri
    DisallowedResourceProblem:
      type: object
      description: A problem that indicates that the resource requested violates the
        precepts of this API.
      allOf:
      - $ref: '#/components/schemas/Problem'
      - required:
        - resource_id
        - resource_type
        - section
        type: object
        properties:
          resource_id:
            type: string
          resource_type:
            type: string
            enum:
            - tweet
            - user
            - media
            - list
            - space
          section:
            type: string
            enum:
            - data
            - includes
    UnsupportedAuthenticationProblem:
      type: object
      description: A problem that indicates that the authentication used is not supported.
      allOf:
      - $ref: '#/components/schemas/Problem'
    UsageCapExceededProblem:
      type: object
      description: A problem that indicates that a usage cap has been exceeded.
      allOf:
      - $ref: '#/components/schemas/Problem'
      - type: object
        properties:
          period:
            type: string
            enum:
            - Daily
            - Monthly
          scope:
            type: string
            enum:
            - Account
            - Product
    ConnectionExceptionProblem:
      type: object
      description: A problem that indicates something is wrong with the connection
      allOf:
      - $ref: '#/components/schemas/Problem'
      - properties:
          connection_issue:
            type: string
            enum:
            - TooManyConnections
            - ProvisioningSubscription
            - RuleConfigurationIssue
            - RulesInvalidIssue
    ClientDisconnectedProblem:
      type: object
      description: Your client has gone away.
      allOf:
      - $ref: '#/components/schemas/Problem'
    OperationalDisconnectProblem:
      type: object
      description: You have been disconnected for operational reasons.
      allOf:
      - $ref: '#/components/schemas/Problem'
      - properties:
          disconnect_type:
            type: string
            enum:
            - OperationalDisconnect
            - UpstreamOperationalDisconnect
            - ForceDisconnect
            - UpstreamUncleanDisconnect
            - SlowReader
            - InternalError
            - ClientApplicationStateDegraded
            - InvalidRules
    RulesCapProblem:
      type: object
      description: You have exceeded the maximum number of rules.
      allOf:
      - $ref: '#/components/schemas/Problem'
    InvalidRuleProblem:
      type: object
      description: The rule you have submitted is invalid.
      allOf:
      - $ref: '#/components/schemas/Problem'
    DuplicateRuleProblem:
      type: object
      description: The rule you have submitted is a duplicate.
      allOf:
      - $ref: '#/components/schemas/Problem'
      - properties:
          value:
            type: string
          id:
            type: string
    ConflictProblem:
      type: object
      description: You cannot create a new job if one is already in progress.
      allOf:
      - $ref: '#/components/schemas/Problem'
    NonCompliantRulesProblem:
      description: A problem that indicates the user's rule set is not compliant.
      allOf:
      - $ref: '#/components/schemas/Problem'
    Problem:
      required:
      - title
      - type
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        detail:
          type: string
        status:
          type: integer
      description: "An HTTP Problem Details object, as defined in IETF RFC 7807 (https://tools.ietf.org/html/rfc7807)."
      example:
        detail: detail
        type: type
        title: title
        status: 2
      discriminator:
        propertyName: type
        mapping:
          about:blank: '#/components/schemas/GenericProblem'
          https://api.twitter.com/2/problems/invalid-request: '#/components/schemas/InvalidRequestProblem'
          https://api.twitter.com/2/problems/client-forbidden: '#/components/schemas/ClientForbiddenProblem'
          https://api.twitter.com/2/problems/resource-not-found: '#/components/schemas/ResourceNotFoundProblem'
          https://api.twitter.com/2/problems/resource-unavailable: '#/components/schemas/ResourceUnavailableProblem'
          https://api.twitter.com/2/problems/not-authorized-for-resource: '#/components/schemas/ResourceUnauthorizedProblem'
          https://api.twitter.com/2/problems/not-authorized-for-field: '#/components/schemas/FieldUnauthorizedProblem'
          https://api.twitter.com/2/problems/disallowed-resource: '#/components/schemas/DisallowedResourceProblem'
          https://api.twitter.com/2/problems/unsupported-authentication: '#/components/schemas/UnsupportedAuthenticationProblem'
          https://api.twitter.com/2/problems/usage-capped: '#/components/schemas/UsageCapExceededProblem'
          https://api.twitter.com/2/problems/streaming-connection: '#/components/schemas/ConnectionExceptionProblem'
          https://api.twitter.com/2/problems/client-disconnected: '#/components/schemas/ClientDisconnectedProblem'
          https://api.twitter.com/2/problems/operational-disconnect: '#/components/schemas/OperationalDisconnectProblem'
          https://api.twitter.com/2/problems/rule-cap: '#/components/schemas/RulesCapProblem'
          https://api.twitter.com/2/problems/invalid-rules: '#/components/schemas/InvalidRuleProblem'
          https://api.twitter.com/2/problems/duplicate-rules: '#/components/schemas/DuplicateRuleProblem'
          https://api.twitter.com/2/problems/conflict: '#/components/schemas/ConflictProblem'
          https://api.twitter.com/2/problems/noncompliant-rules: '#/components/schemas/NonCompliantRulesProblem'
    ProblemOrError:
      type: object
      description: Represents the response in case of throwing an exception. Mainly
        for the openapi-generator
      oneOf:
      - $ref: '#/components/schemas/Error'
      - $ref: '#/components/schemas/Problem'
    TweetSearchResponse:
      type: object
      properties:
        data:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Tweet'
        includes:
          $ref: '#/components/schemas/Expansions'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        meta:
          $ref: '#/components/schemas/TweetSearchResponse_meta'
      example:
        data:
        - id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        - id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        meta:
          oldest_id: oldest_id
          newest_id: newest_id
          next_token: next_token
          result_count: 0
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - null
          - null
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    StreamingTweet:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Tweet'
        includes:
          $ref: '#/components/schemas/Expansions'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
          id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - null
          - null
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    FilteredStreamingTweet:
      type: object
      description: A tweet or error that can be returned by the streaming tweet API
      oneOf:
      - required:
        - data
        - matching_rules
        type: object
        properties:
          data:
            $ref: '#/components/schemas/Tweet'
          matching_rules:
            type: array
            description: The list of rules which matched the tweet
            items:
              $ref: '#/components/schemas/FilteredStreamingTweet_matching_rules'
          includes:
            $ref: '#/components/schemas/Expansions'
        description: The values returned with a successful streamed tweet. Includes
          the user provided rules that the tweet matched.
      - required:
        - errors
        type: object
        properties:
          errors:
            type: array
            items:
              $ref: '#/components/schemas/Problem'
    RuleId:
      pattern: "^[0-9]{1,19}$"
      type: string
      description: Unique identifier of this rule.
      example: "120897978112909812"
    Rule:
      required:
      - value
      type: object
      properties:
        value:
          $ref: '#/components/schemas/RuleValue'
        tag:
          $ref: '#/components/schemas/RuleTag'
        id:
          $ref: '#/components/schemas/RuleId'
      description: A user-provided stream filtering rule.
      example:
        tag: Non-retweeted coffee tweets
        id: "120897978112909812"
        value: coffee -is:retweet
    RuleNoId:
      required:
      - value
      type: object
      properties:
        value:
          $ref: '#/components/schemas/RuleValue'
        tag:
          $ref: '#/components/schemas/RuleTag'
      description: A user-provided stream filtering rule.
    RuleTag:
      type: string
      description: A tag meant for the labeling of user provided rules.
      example: Non-retweeted coffee tweets
    RuleValue:
      type: string
      description: The filterlang value of the rule.
      example: coffee -is:retweet
    RulesResponseMetadata:
      required:
      - sent
      type: object
      properties:
        sent:
          type: string
        summary:
          $ref: '#/components/schemas/RulesRequestSummary'
        next_token:
          minLength: 1
          type: string
          description: "This parameter is used to get the next 'page' of results.\
            \ The value used with the parameter is pulled directly from the response\
            \ provided by the API, and should not be modified."
        result_count:
          type: integer
          description: Number of Rules in result set
          format: int32
      example:
        summary: ""
        next_token: next_token
        sent: sent
        result_count: 0
    RulesRequestSummary:
      type: object
      oneOf:
      - required:
        - created
        - invalid
        - not_created
        - valid
        type: object
        properties:
          created:
            type: integer
            description: Number of user-specified stream filtering rules that were
              created.
            format: int32
            example: 1
          not_created:
            type: integer
            description: Number of user-specified stream filtering rules that were
              not created.
            format: int32
            example: 1
          valid:
            type: integer
            description: Number of valid user-specified stream filtering rules.
            format: int32
            example: 1
          invalid:
            type: integer
            description: Number of invalid user-specified stream filtering rules.
            format: int32
            example: 1
        description: A summary of the results of the addition of user-specified stream
          filtering rules.
      - required:
        - deleted
        - not_deleted
        type: object
        properties:
          deleted:
            type: integer
            description: Number of user-specified stream filtering rules that were
              deleted.
            format: int32
          not_deleted:
            type: integer
            description: Number of user-specified stream filtering rules that were
              not deleted.
            format: int32
    AddOrDeleteRulesRequest:
      type: object
      oneOf:
      - $ref: '#/components/schemas/AddRulesRequest'
      - $ref: '#/components/schemas/DeleteRulesRequest'
    AddOrDeleteRulesResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          description: All user-specified stream filtering rules that were created.
          items:
            $ref: '#/components/schemas/Rule'
        meta:
          $ref: '#/components/schemas/RulesResponseMetadata'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      description: A response from modifying user-specified stream filtering rules.
      example:
        data:
        - tag: Non-retweeted coffee tweets
          id: "120897978112909812"
          value: coffee -is:retweet
        - tag: Non-retweeted coffee tweets
          id: "120897978112909812"
          value: coffee -is:retweet
        meta:
          summary: ""
          next_token: next_token
          sent: sent
          result_count: 0
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    AddRulesRequest:
      required:
      - add
      type: object
      properties:
        add:
          type: array
          items:
            $ref: '#/components/schemas/RuleNoId'
      description: A request to add a user-specified stream filtering rule.
    DeleteRulesRequest:
      required:
      - delete
      type: object
      properties:
        delete:
          $ref: '#/components/schemas/DeleteRulesRequest_delete'
      description: A response from deleting user-specified stream filtering rules.
    GenericTweetsTimelineResponse:
      type: object
      properties:
        data:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Tweet'
        includes:
          $ref: '#/components/schemas/Expansions'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        meta:
          $ref: '#/components/schemas/GenericTweetsTimelineResponse_meta'
      example:
        data:
        - id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        - id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        meta:
          oldest_id: null
          previous_token: previous_token
          newest_id: "1346889436626259968"
          next_token: next_token
          result_count: 0
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - null
          - null
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    UsersBlockingMutationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UsersBlockingMutationResponse_data'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
          blocking: true
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    GenericMultipleUsersLookupResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
        includes:
          $ref: '#/components/schemas/Expansions'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        meta:
          $ref: '#/components/schemas/GenericMultipleUsersLookupResponse_meta'
      example:
        data:
        - id: "2244994945"
          created_at: 2013-12-14T04:35:55Z
          name: Twitter Dev
          username: TwitterDev
          protected: false
        - id: "2244994945"
          created_at: 2013-12-14T04:35:55Z
          name: Twitter Dev
          username: TwitterDev
          protected: false
        meta:
          previous_token: previous_token
          next_token: next_token
          result_count: 0
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - null
          - null
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    ListLookupMultipleUsersLookupResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
        includes:
          $ref: '#/components/schemas/Expansions'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        meta:
          $ref: '#/components/schemas/ListLookupMultipleUsersLookupResponse_meta'
      example:
        data:
        - id: "2244994945"
          created_at: 2013-12-14T04:35:55Z
          name: Twitter Dev
          username: TwitterDev
          protected: false
        - id: "2244994945"
          created_at: 2013-12-14T04:35:55Z
          name: Twitter Dev
          username: TwitterDev
          protected: false
        meta:
          previous_token: previous_token
          next_token: next_token
          result_count: 0
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - null
          - null
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    UsersMutingMutationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UsersMutingMutationResponse_data'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
          muting: true
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    UsersFollowingLookupResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
        includes:
          $ref: '#/components/schemas/Expansions'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        meta:
          $ref: '#/components/schemas/GenericMultipleUsersLookupResponse_meta'
      example:
        data:
        - id: "2244994945"
          created_at: 2013-12-14T04:35:55Z
          name: Twitter Dev
          username: TwitterDev
          protected: false
        - id: "2244994945"
          created_at: 2013-12-14T04:35:55Z
          name: Twitter Dev
          username: TwitterDev
          protected: false
        meta:
          previous_token: previous_token
          next_token: next_token
          result_count: 0
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - null
          - null
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    UsersFollowingCreateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UsersFollowingCreateResponse_data'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
          following: true
          pending_follow: true
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    UsersFollowingDeleteResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ListFollowedResponse_data'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
          following: true
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    UsersLikesCreateRequest:
      required:
      - tweet_id
      type: object
      properties:
        tweet_id:
          pattern: "^[0-9]{1,19}$"
          type: string
    UsersLikesCreateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UsersLikesCreateResponse_data'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
          liked: true
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    UsersLikesDeleteResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UsersLikesCreateResponse_data'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
          liked: true
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    UsersRetweetsCreateRequest:
      required:
      - tweet_id
      type: object
      properties:
        tweet_id:
          pattern: "^[0-9]{1,19}$"
          type: string
    UsersRetweetsCreateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UsersRetweetsCreateResponse_data'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
          retweeted: true
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    UsersRetweetsDeleteResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UsersRetweetsCreateResponse_data'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
          retweeted: true
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    TweetCountsResponse:
      type: object
      properties:
        data:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/SearchCount'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        meta:
          $ref: '#/components/schemas/TweetCountsResponse_meta'
      example:
        data:
        - tweet_count: 0
          start: 2000-01-23T04:56:07.000+00:00
          end: 2000-01-23T04:56:07.000+00:00
        - tweet_count: 0
          start: 2000-01-23T04:56:07.000+00:00
          end: 2000-01-23T04:56:07.000+00:00
        meta:
          total_tweet_count: 6
          next_token: next_token
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    SearchCount:
      required:
      - end
      - start
      - tweet_count
      type: object
      properties:
        end:
          $ref: '#/components/schemas/End'
        start:
          $ref: '#/components/schemas/Start'
        tweet_count:
          $ref: '#/components/schemas/TweetCount'
      description: Represent a Search Count Result
      example:
        tweet_count: 0
        start: 2000-01-23T04:56:07.000+00:00
        end: 2000-01-23T04:56:07.000+00:00
    Start:
      type: string
      description: The start time of the bucket
      format: date-time
    End:
      type: string
      description: The end time of the bucket
      format: date-time
    TweetCount:
      type: integer
      description: The count for the bucket
    Granularity:
      type: string
      enum:
      - minute
      - hour
      - day
      default: hour
    JobId:
      pattern: "^[0-9]{1,19}$"
      type: string
      description: Compliance Job ID
      example: "1372966999991541762"
    CreatedAt:
      type: string
      description: Creation time of the compliance job.
      format: date-time
      example: 2021-01-06T18:40:40Z
    UploadUrl:
      type: string
      description: URL to which the user will upload their tweet or user IDs
      format: uri
    DownloadUrl:
      type: string
      description: URL from which the user will retrieve their compliance results
      format: uri
    UploadExpiration:
      type: string
      description: Expiration time of the upload URL
      format: date-time
      example: 2021-01-06T18:40:40Z
    DownloadExpiration:
      type: string
      description: Expiration time of the download URL
      format: date-time
      example: 2021-01-06T18:40:40Z
    ComplianceJobName:
      maxLength: 64
      type: string
      description: User-provided name for a compliance job
      example: my-job
    ComplianceJobStatus:
      type: string
      description: Status of a compliance job
      enum:
      - created
      - in_progress
      - failed
      - complete
    ComplianceJobType:
      type: string
      description: Type of compliance job to list.
      enum:
      - tweets
      - users
    ComplianceJob:
      required:
      - created_at
      - download_expires_at
      - download_url
      - id
      - status
      - type
      - upload_expires_at
      - upload_url
      type: object
      properties:
        id:
          $ref: '#/components/schemas/JobId'
        type:
          $ref: '#/components/schemas/ComplianceJobType'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        upload_url:
          $ref: '#/components/schemas/UploadUrl'
        upload_expires_at:
          $ref: '#/components/schemas/UploadExpiration'
        download_url:
          $ref: '#/components/schemas/DownloadUrl'
        download_expires_at:
          $ref: '#/components/schemas/DownloadExpiration'
        name:
          $ref: '#/components/schemas/ComplianceJobName'
        status:
          $ref: '#/components/schemas/ComplianceJobStatus'
      example:
        download_expires_at: 2021-01-06T18:40:40Z
        upload_expires_at: 2021-01-06T18:40:40Z
        download_url: http://example.com/aeiou
        name: my-job
        created_at: 2021-01-06T18:40:40Z
        upload_url: http://example.com/aeiou
        id: "1372966999991541762"
        type: tweets
        status: created
    SingleComplianceJobResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ComplianceJob'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
          download_expires_at: 2021-01-06T18:40:40Z
          upload_expires_at: 2021-01-06T18:40:40Z
          download_url: http://example.com/aeiou
          name: my-job
          created_at: 2021-01-06T18:40:40Z
          upload_url: http://example.com/aeiou
          id: "1372966999991541762"
          type: tweets
          status: created
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    MultiComplianceJobResponse:
      type: object
      properties:
        data:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/ComplianceJob'
        errors:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        meta:
          $ref: '#/components/schemas/MultiComplianceJobResponse_meta'
      example:
        data:
        - download_expires_at: 2021-01-06T18:40:40Z
          upload_expires_at: 2021-01-06T18:40:40Z
          download_url: http://example.com/aeiou
          name: my-job
          created_at: 2021-01-06T18:40:40Z
          upload_url: http://example.com/aeiou
          id: "1372966999991541762"
          type: tweets
          status: created
        - download_expires_at: 2021-01-06T18:40:40Z
          upload_expires_at: 2021-01-06T18:40:40Z
          download_url: http://example.com/aeiou
          name: my-job
          created_at: 2021-01-06T18:40:40Z
          upload_url: http://example.com/aeiou
          id: "1372966999991541762"
          type: tweets
          status: created
        meta:
          result_count: 0
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    Space:
      required:
      - id
      - state
      type: object
      properties:
        id:
          $ref: '#/components/schemas/SpaceID'
        state:
          type: string
          description: The current state of the space.
          example: live
          enum:
          - live
          - scheduled
          - ended
        started_at:
          type: string
          description: When the space was started as a date string
          format: date-time
        is_ticketed:
          type: boolean
          description: Denotes if the space is a ticketed space
          example: false
        participant_count:
          type: integer
          description: The number of participants in a space
          format: int32
          example: 10
        title:
          type: string
          description: The title of the space
          example: Spaces are Awesome
        host_ids:
          type: array
          description: The user ids for the hosts of the space
          items:
            $ref: '#/components/schemas/UserID'
        updated_at:
          type: string
          description: When the space was last updated
          format: date-time
        created_at:
          type: string
          description: Creation time of the space
          format: date-time
          example: 2021-07-06T18:40:40Z
        creator_id:
          $ref: '#/components/schemas/UserID'
        lang:
          type: string
          description: The language of the space
          example: en
        speaker_ids:
          type: array
          description: An array of user ids for people who were speakers in a space
          items:
            $ref: '#/components/schemas/UserID'
        invited_user_ids:
          type: array
          description: An array of user ids for people who were invited to a space
          items:
            $ref: '#/components/schemas/UserID'
        scheduled_start:
          type: string
          description: A date time stamp for when a space is scheduled to begin
          format: date-time
          example: 2021-07-06T18:40:40Z
        ended_at:
          type: string
          description: End time of the space
          format: date-time
          example: 2021-07-06T18:40:40Z
        topics:
          type: array
          description: "The topics of a space, as selected by its creator"
          items:
            $ref: '#/components/schemas/Space_topics'
        subscriber_count:
          type: integer
          description: The number of people who have either purchased a ticket or
            set a reminder for this space.
          format: int32
          example: 10
      description: ""
      example:
        topics:
        - "{\"id\":\"848920371311001600\",\"description\":\"All about technology\"\
          ,\"name\":\"Technology\"}"
        - "{\"id\":\"848920371311001600\",\"description\":\"All about technology\"\
          ,\"name\":\"Technology\"}"
        scheduled_start: 2021-07-06T18:40:40Z
        created_at: 2021-07-06T18:40:40Z
        is_ticketed: false
        title: Spaces are Awesome
        invited_user_ids:
        - null
        - null
        speaker_ids:
        - null
        - null
        participant_count: 10
        updated_at: 2000-01-23T04:56:07.000+00:00
        subscriber_count: 10
        creator_id: null
        started_at: 2000-01-23T04:56:07.000+00:00
        id: 1SLjjRYNejbKM
        state: live
        host_ids:
        - "2244994945"
        - "2244994945"
        lang: en
        ended_at: 2021-07-06T18:40:40Z
    SingleSpaceLookupResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Space'
        includes:
          $ref: '#/components/schemas/Expansions'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
          topics:
          - "{\"id\":\"848920371311001600\",\"description\":\"All about technology\"\
            ,\"name\":\"Technology\"}"
          - "{\"id\":\"848920371311001600\",\"description\":\"All about technology\"\
            ,\"name\":\"Technology\"}"
          scheduled_start: 2021-07-06T18:40:40Z
          created_at: 2021-07-06T18:40:40Z
          is_ticketed: false
          title: Spaces are Awesome
          invited_user_ids:
          - null
          - null
          speaker_ids:
          - null
          - null
          participant_count: 10
          updated_at: 2000-01-23T04:56:07.000+00:00
          subscriber_count: 10
          creator_id: null
          started_at: 2000-01-23T04:56:07.000+00:00
          id: 1SLjjRYNejbKM
          state: live
          host_ids:
          - "2244994945"
          - "2244994945"
          lang: en
          ended_at: 2021-07-06T18:40:40Z
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - null
          - null
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    MultiSpaceLookupResponse:
      type: object
      properties:
        data:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Space'
        includes:
          $ref: '#/components/schemas/Expansions'
        meta:
          $ref: '#/components/schemas/MultiTweetLookupResponse_meta'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
      example:
        data:
        - topics:
          - "{\"id\":\"848920371311001600\",\"description\":\"All about technology\"\
            ,\"name\":\"Technology\"}"
          - "{\"id\":\"848920371311001600\",\"description\":\"All about technology\"\
            ,\"name\":\"Technology\"}"
          scheduled_start: 2021-07-06T18:40:40Z
          created_at: 2021-07-06T18:40:40Z
          is_ticketed: false
          title: Spaces are Awesome
          invited_user_ids:
          - null
          - null
          speaker_ids:
          - null
          - null
          participant_count: 10
          updated_at: 2000-01-23T04:56:07.000+00:00
          subscriber_count: 10
          creator_id: null
          started_at: 2000-01-23T04:56:07.000+00:00
          id: 1SLjjRYNejbKM
          state: live
          host_ids:
          - "2244994945"
          - "2244994945"
          lang: en
          ended_at: 2021-07-06T18:40:40Z
        - topics:
          - "{\"id\":\"848920371311001600\",\"description\":\"All about technology\"\
            ,\"name\":\"Technology\"}"
          - "{\"id\":\"848920371311001600\",\"description\":\"All about technology\"\
            ,\"name\":\"Technology\"}"
          scheduled_start: 2021-07-06T18:40:40Z
          created_at: 2021-07-06T18:40:40Z
          is_ticketed: false
          title: Spaces are Awesome
          invited_user_ids:
          - null
          - null
          speaker_ids:
          - null
          - null
          participant_count: 10
          updated_at: 2000-01-23T04:56:07.000+00:00
          subscriber_count: 10
          creator_id: null
          started_at: 2000-01-23T04:56:07.000+00:00
          id: 1SLjjRYNejbKM
          state: live
          host_ids:
          - "2244994945"
          - "2244994945"
          lang: en
          ended_at: 2021-07-06T18:40:40Z
        meta:
          result_count: 0
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - null
          - null
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
      description: The number of results to return
      format: int32
      example: 25
    id_blocking_body:
      required:
      - target_user_id
      type: object
      properties:
        target_user_id:
          pattern: "^[0-9]{1,19}$"
          type: string
    id_muting_body:
      required:
      - target_user_id
      type: object
      properties:
        target_user_id:
          pattern: "^[0-9]{1,19}$"
          type: string
    id_following_body:
      required:
      - target_user_id
      type: object
      properties:
        target_user_id:
          pattern: "^[0-9]{1,19}$"
          type: string
    "2tweets_reply":
      type: object
      properties:
        in_reply_to_tweet_id:
          $ref: '#/components/schemas/TweetID'
        exclude_reply_user_ids:
          type: array
          description: A list of User Ids to be excluded from the reply Tweet.
          items:
            $ref: '#/components/schemas/UserID'
      description: Tweet information of the Tweet being replied to.
      example: null
    "2tweets_media":
      type: object
      properties:
        media_ids:
          type: array
          description: A list of Media Ids to be attached to a created Tweet.
          items:
            $ref: '#/components/schemas/MediaId'
        tagged_user_ids:
          type: array
          description: A list of User Ids to be tagged in the media for created Tweet.
          items:
            $ref: '#/components/schemas/UserID'
      description: Media information being attached to created Tweet. This is mutually
        exclusive from Quote Tweet Id and Poll.
      example: null
    "2tweets_poll":
      type: object
      properties:
        options:
          type: array
          items:
            $ref: '#/components/schemas/PollOptionLabel'
        duration_minutes:
          $ref: '#/components/schemas/DurationMinutes'
      description: Poll options for a Tweet with a poll. This is mutually exclusive
        from Media and Quote Tweet Id.
      example: null
    "2tweets_geo":
      type: object
      properties:
        place_id:
          type: string
      description: Place ID being attached to the Tweet for geo location.
      example: null
    "2_tweets_body":
      type: object
      properties:
        text:
          $ref: '#/components/schemas/TweetText'
        direct_message_deep_link:
          type: string
          description: Link to take the conversation from the public timeline to a
            private Direct Message.
        quote_tweet_id:
          allOf:
          - $ref: '#/components/schemas/TweetID'
          - description: Link to the Tweet being quoted. This is   mutually exclusive
              from Poll and Media.
        for_super_followers_only:
          type: boolean
          description: Exclusive Tweet for super followers.
        reply:
          $ref: '#/components/schemas/2tweets_reply'
        media:
          $ref: '#/components/schemas/2tweets_media'
        poll:
          $ref: '#/components/schemas/2tweets_poll'
        reply_settings:
          type: string
          description: Settings to indicate who can reply to the Tweet.
          enum:
          - following
          - mentionedUsers
        geo:
          $ref: '#/components/schemas/2tweets_geo'
    id_hidden_body:
      type: object
      properties:
        hidden:
          type: boolean
    inline_response_200:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_data'
      example:
        data:
          hidden: true
    inline_response_200_1:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Rule'
        meta:
          $ref: '#/components/schemas/RulesResponseMetadata'
      example:
        data:
        - tag: Non-retweeted coffee tweets
          id: "120897978112909812"
          value: coffee -is:retweet
        - tag: Non-retweeted coffee tweets
          id: "120897978112909812"
          value: coffee -is:retweet
        meta:
          summary: ""
          next_token: next_token
          sent: sent
          result_count: 0
    inline_response_200_2:
      type: object
      properties:
        data:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Tweet'
        includes:
          $ref: '#/components/schemas/Expansions'
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        meta:
          $ref: '#/components/schemas/inline_response_200_2_meta'
      example:
        data:
        - id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        - id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        meta:
          previous_token: previous_token
          next_token: next_token
          result_count: 0
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: {}
            country_code: US
            country: United States
            contained_within:
            - null
            - null
            full_name: "Lakewood, CO"
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - null
          - null
        errors:
        - detail: detail
          type: type
          title: title
          status: 2
        - detail: detail
          type: type
          title: title
          status: 2
    compliance_jobs_body:
      required:
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ComplianceJobType'
        resumable:
          type: boolean
          description: "If true, this endpoint will return a pre-signed URL with resumable\
            \ uploads enabled"
        name:
          $ref: '#/components/schemas/ComplianceJobName'
      description: A request to create a new batch compliance job.
    Tweet_referenced_tweets:
      required:
      - id
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - retweeted
          - quoted
          - replied_to
        id:
          $ref: '#/components/schemas/TweetID'
      example: null
    Tweet_attachments:
      type: object
      properties:
        media_keys:
          minItems: 1
          type: array
          description: A list of Media Keys for each one of the media attachments
            (if media are attached).
          items:
            $ref: '#/components/schemas/MediaKey'
        poll_ids:
          minItems: 1
          type: array
          description: A list of poll IDs (if polls are attached).
          items:
            $ref: '#/components/schemas/PollId'
      description: Specifies the type of attachments (if any) present in this Tweet.
      example: null
    Tweet_geo:
      type: object
      properties:
        coordinates:
          $ref: '#/components/schemas/Point'
        place_id:
          $ref: '#/components/schemas/PlaceId'
      description: "The location tagged on the Tweet, if the user provided one."
      example: null
    Tweet_public_metrics:
      required:
      - like_count
      - reply_count
      - retweet_count
      type: object
      properties:
        retweet_count:
          type: integer
          description: Number of times this Tweet has been Retweeted.
        reply_count:
          type: integer
          description: Number of times this Tweet has been replied to.
        like_count:
          type: integer
          description: Number of times this Tweet has been liked.
        quote_count:
          type: integer
          description: Number of times this Tweet has been quoted.
      description: Engagement metrics for the Tweet at the time of the request.
      example: null
    Tweet_non_public_metrics:
      type: object
      properties:
        impression_count:
          type: integer
          description: Number of times this Tweet has been viewed.
          format: int32
      description: Nonpublic engagement metrics for the Tweet at the time of the request.
      example: null
    Tweet_promoted_metrics:
      type: object
      properties:
        impression_count:
          type: integer
          description: Number of times this Tweet has been viewed.
          format: int32
        like_count:
          type: integer
          description: Number of times this Tweet has been liked.
          format: int32
        reply_count:
          type: integer
          description: Number of times this Tweet has been replied to.
          format: int32
        retweet_count:
          type: integer
          description: Number of times this Tweet has been Retweeted.
          format: int32
      description: Promoted nonpublic engagement metrics for the Tweet at the time
        of the request.
      example: null
    Tweet_organic_metrics:
      required:
      - impression_count
      - like_count
      - reply_count
      - retweet_count
      type: object
      properties:
        impression_count:
          type: integer
          description: Number of times this Tweet has been viewed.
        retweet_count:
          type: integer
          description: Number of times this Tweet has been Retweeted.
        reply_count:
          type: integer
          description: Number of times this Tweet has been replied to.
        like_count:
          type: integer
          description: Number of times this Tweet has been liked.
      description: Organic nonpublic engagement metrics for the Tweet at the time
        of the request.
      example: null
    User_entities_url:
      type: object
      properties:
        urls:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/UrlEntity'
      description: "Expanded details for the URL specified in the user's profile,\
        \ with start and end indices."
      example: null
    User_entities:
      type: object
      properties:
        url:
          $ref: '#/components/schemas/User_entities_url'
        description:
          $ref: '#/components/schemas/FullTextEntities'
      description: A list of metadata found in the user's profile description.
      example: null
    User_public_metrics:
      required:
      - followers_count
      - following_count
      - listed_count
      - tweet_count
      type: object
      properties:
        followers_count:
          type: integer
          description: Number of users who are following this user.
        following_count:
          type: integer
          description: Number of users this user is following.
        tweet_count:
          type: integer
          description: The number of Tweets (including Retweets) posted by this user.
        listed_count:
          type: integer
          description: The number of lists that include this user.
      description: A list of metrics for this user
      example: null
    MultiTweetLookupResponse_meta:
      type: object
      properties:
        result_count:
          type: integer
          description: The number of spaces results returned in this response
      example:
        result_count: 0
    QuoteTweetLookupResponse_meta:
      type: object
      properties:
        next_token:
          type: string
          description: This value is used to get the next 'page' of results by providing
            it to the pagination_token parameter.
        result_count:
          type: integer
          description: The number of quoting tweets returned in this response
      example:
        next_token: next_token
        result_count: 0
    ListDeleteResponse_data:
      type: object
      properties:
        deleted:
          type: boolean
      example:
        deleted: true
    ListUpdateResponse_data:
      type: object
      properties:
        updated:
          type: boolean
      example:
        updated: true
    ListMemberResponse_data:
      type: object
      properties:
        is_member:
          type: boolean
      example:
        is_member: true
    ListFollowedResponse_data:
      type: object
      properties:
        following:
          type: boolean
      example:
        following: true
    ListPinnedResponse_data:
      type: object
      properties:
        pinned:
          type: boolean
      example:
        pinned: true
    SingleListLookupResponse_includes:
      type: object
      properties:
        users:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/User'
      example:
        users:
        - id: "2244994945"
          created_at: 2013-12-14T04:35:55Z
          name: Twitter Dev
          username: TwitterDev
          protected: false
        - id: "2244994945"
          created_at: 2013-12-14T04:35:55Z
          name: Twitter Dev
          username: TwitterDev
          protected: false
    MultiListResponse_meta:
      type: object
      properties:
        previous_token:
          pattern: "^-?[0-9]{1,19}$"
          type: string
          description: The previous token
        next_token:
          pattern: "^-?[0-9]{1,19}$"
          type: string
          description: The next token
        result_count:
          type: integer
          description: The number of list results returned in this response
      example:
        previous_token: previous_token
        next_token: next_token
        result_count: 1
    MultiListNoPaginationResponse_meta:
      type: object
      properties:
        result_count:
          type: integer
          description: The number of list results returned in this response
      example:
        result_count: 0
    BookmarkMutationResponse_data:
      type: object
      properties:
        bookmarked:
          type: boolean
      example:
        bookmarked: true
    TweetDeleteResponse_data:
      required:
      - deleted
      type: object
      properties:
        deleted:
          type: boolean
      example:
        deleted: true
    TweetCreateResponse_data:
      required:
      - id
      - text
      type: object
      properties:
        id:
          $ref: '#/components/schemas/TweetID'
        text:
          $ref: '#/components/schemas/TweetText'
      example:
        id: "1346889436626259968"
        text: Learn how to use the user Tweet timeline and user mention timeline endpoints
          in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
    Video_variants:
      type: object
      properties:
        bit_rate:
          type: integer
          description: The bit rate of the media
        content_type:
          type: string
          description: The content type of the media
        url:
          type: string
          description: The url to the media
          format: uri
      example: null
    Video_public_metrics:
      type: object
      properties:
        view_count:
          type: integer
          description: Number of times this video has been viewed.
          format: int32
      description: Engagement metrics for the Media at the time of the request.
      example: null
    Video_non_public_metrics:
      type: object
      properties:
        playback_0_count:
          type: integer
          description: Number of users who made it through 0% of the video.
          format: int32
        playback_25_count:
          type: integer
          description: Number of users who made it through 25% of the video.
          format: int32
        playback_50_count:
          type: integer
          description: Number of users who made it through 50% of the video.
          format: int32
        playback_75_count:
          type: integer
          description: Number of users who made it through 75% of the video.
          format: int32
        playback_100_count:
          type: integer
          description: Number of users who made it through 100% of the video.
          format: int32
      description: Nonpublic engagement metrics for the Media at the time of the request.
      example: null
    Video_organic_metrics:
      type: object
      properties:
        playback_0_count:
          type: integer
          description: Number of users who made it through 0% of the video.
          format: int32
        playback_25_count:
          type: integer
          description: Number of users who made it through 25% of the video.
          format: int32
        playback_50_count:
          type: integer
          description: Number of users who made it through 50% of the video.
          format: int32
        playback_75_count:
          type: integer
          description: Number of users who made it through 75% of the video.
          format: int32
        playback_100_count:
          type: integer
          description: Number of users who made it through 100% of the video.
          format: int32
        view_count:
          type: integer
          description: Number of times this video has been viewed.
          format: int32
      description: Organic nonpublic engagement metrics for the Media at the time
        of the request.
      example: null
    Video_promoted_metrics:
      type: object
      properties:
        playback_0_count:
          type: integer
          description: Number of users who made it through 0% of the video.
          format: int32
        playback_25_count:
          type: integer
          description: Number of users who made it through 25% of the video.
          format: int32
        playback_50_count:
          type: integer
          description: Number of users who made it through 50% of the video.
          format: int32
        playback_75_count:
          type: integer
          description: Number of users who made it through 75% of the video.
          format: int32
        playback_100_count:
          type: integer
          description: Number of users who made it through 100% of the video.
          format: int32
        view_count:
          type: integer
          description: Number of times this video has been viewed.
          format: int32
      description: Promoted nonpublic engagement metrics for the Media at the time
        of the request.
      example: null
    InvalidRequestProblem_errors:
      type: object
      properties:
        parameters:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        message:
          type: string
      example: null
    TweetSearchResponse_meta:
      type: object
      properties:
        newest_id:
          pattern: "^[0-9]{1,19}$"
          type: string
          description: Most recent Tweet Id returned by search query
        oldest_id:
          pattern: "^[0-9]{1,19}$"
          type: string
          description: Oldest Tweet Id returned by search query
        next_token:
          type: string
          description: This value is used to get the next 'page' of results by providing
            it to the next_token parameter.
        result_count:
          type: integer
          description: Number of search query results
          format: int32
      example:
        oldest_id: oldest_id
        newest_id: newest_id
        next_token: next_token
        result_count: 0
    FilteredStreamingTweet_matching_rules:
      required:
      - id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RuleId'
        tag:
          type: string
          description: The user-supplied tag assigned to the rule which matched
      example: null
    DeleteRulesRequest_delete:
      type: object
      properties:
        ids:
          type: array
          description: IDs of all deleted user-specified stream filtering rules.
          items:
            $ref: '#/components/schemas/RuleId'
        values:
          type: array
          description: Values of all deleted user-specified stream filtering rules.
          items:
            $ref: '#/components/schemas/RuleValue'
      description: IDs and values of all deleted user-specified stream filtering rules.
      example: null
    GenericTweetsTimelineResponse_meta:
      type: object
      properties:
        newest_id:
          $ref: '#/components/schemas/TweetID'
        oldest_id:
          $ref: '#/components/schemas/TweetID'
        previous_token:
          pattern: "^[a-zA-Z0-9]+$"
          type: string
          description: The previous token
        next_token:
          pattern: "^[a-zA-Z0-9]+$"
          type: string
          description: The next token
        result_count:
          type: integer
          description: Number of Tweets in result set
          format: int32
      example:
        oldest_id: null
        previous_token: previous_token
        newest_id: "1346889436626259968"
        next_token: next_token
        result_count: 0
    UsersBlockingMutationResponse_data:
      type: object
      properties:
        blocking:
          type: boolean
      example:
        blocking: true
    GenericMultipleUsersLookupResponse_meta:
      type: object
      properties:
        previous_token:
          pattern: "^[a-zA-Z0-9]+$"
          type: string
          description: The previous token
        next_token:
          pattern: "^[a-zA-Z0-9]+$"
          type: string
          description: The next token
        result_count:
          type: integer
          description: The number of user results returned in this response
      example:
        previous_token: previous_token
        next_token: next_token
        result_count: 0
    ListLookupMultipleUsersLookupResponse_meta:
      type: object
      properties:
        previous_token:
          pattern: "^-?[0-9]{1,19}$"
          type: string
          description: The previous token
        next_token:
          pattern: "^-?[0-9]{1,19}$"
          type: string
          description: The next token
        result_count:
          type: integer
          description: The number of user results returned in this response
      example:
        previous_token: previous_token
        next_token: next_token
        result_count: 0
    UsersMutingMutationResponse_data:
      type: object
      properties:
        muting:
          type: boolean
      example:
        muting: true
    UsersFollowingCreateResponse_data:
      type: object
      properties:
        following:
          type: boolean
        pending_follow:
          type: boolean
      example:
        following: true
        pending_follow: true
    UsersLikesCreateResponse_data:
      type: object
      properties:
        liked:
          type: boolean
      example:
        liked: true
    UsersRetweetsCreateResponse_data:
      type: object
      properties:
        retweeted:
          type: boolean
      example:
        retweeted: true
    TweetCountsResponse_meta:
      type: object
      properties:
        next_token:
          type: string
          description: This value is used to get the next 'page' of results by providing
            it to the next_token parameter.
        total_tweet_count:
          type: integer
          description: Sum of search query count results
          format: int32
      example:
        total_tweet_count: 6
        next_token: next_token
    MultiComplianceJobResponse_meta:
      type: object
      properties:
        result_count:
          type: integer
          description: Number of compliance jobs returned
          format: int32
      example:
        result_count: 0
    Space_topics:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: string
          description: An ID suitable for use in the REST API.
        description:
          type: string
          description: The description of the given topic.
        name:
          type: string
          description: The name of the given topic.
      description: The Twitter Topic object
      example: "{\"id\":\"848920371311001600\",\"description\":\"All about technology\"\
        ,\"name\":\"Technology\"}"
    inline_response_200_data:
      type: object
      properties:
        hidden:
          type: boolean
      example:
        hidden: true
    inline_response_200_2_meta:
      type: object
      properties:
        previous_token:
          pattern: "^[a-zA-Z0-9]+$"
          type: string
          description: The previous token
        next_token:
          pattern: "^[a-zA-Z0-9]+$"
          type: string
          description: The next token
        result_count:
          type: integer
          description: Number of Tweets in result set
          format: int32
      example:
        previous_token: previous_token
        next_token: next_token
        result_count: 0
  responses:
    HttpErrorResponse:
      description: The request has failed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
  parameters:
    TweetExpansionsParameter:
      name: expansions
      in: query
      description: A comma separated list of fields to expand.
      required: false
      style: form
      explode: false
      schema:
        minItems: 1
        uniqueItems: true
        type: array
        description: "The list of fields you can expand for a [Tweet](#Tweet) object.\
          \ If the field has an ID, it can be expanded into a full object."
        example:
        - author_id
        - referenced_tweets.id
        - in_reply_to_user_id
        - geo.place_id
        - attachments.media_keys
        - attachments.poll_ids
        - entities.mentions.username
        - referenced_tweets.id.author_id
        items:
          type: string
          enum:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
    SpaceFieldsParameter:
      name: space.fields
      in: query
      description: A comma separated list of Space fields to display.
      required: false
      style: form
      explode: false
      schema:
        minItems: 1
        uniqueItems: true
        type: array
        description: The fields available for a Space object.
        example:
        - created_at
        - creator_id
        - host_ids
        - invited_user_ids
        - is_ticketed
        - lang
        - participant_count
        - scheduled_start
        - speaker_ids
        - started_at
        - title
        - updated_at
        items:
          type: string
          enum:
          - created_at
          - creator_id
          - host_ids
          - invited_user_ids
          - is_ticketed
          - lang
          - participant_count
          - scheduled_start
          - speaker_ids
          - started_at
          - title
          - updated_at
    UserExpansionsParameter:
      name: expansions
      in: query
      description: A comma separated list of fields to expand.
      required: false
      style: form
      explode: false
      schema:
        minItems: 1
        uniqueItems: true
        type: array
        description: "The list of fields you can expand for a [User](#User) object.\
          \ If the field has an ID, it can be expanded into a full object."
        example:
        - pinned_tweet_id
        items:
          type: string
          enum:
          - pinned_tweet_id
    SpaceExpansionsParameter:
      name: expansions
      in: query
      description: A comma separated list of fields to expand.
      required: false
      style: form
      explode: false
      schema:
        minItems: 1
        uniqueItems: true
        type: array
        description: "The list of fields you can expand for a [Space](#Space) object.\
          \ If the field has an ID, it can be expanded into a full object."
        example:
        - creator_id
        - host_ids
        - invited_user_ids
        - speaker_ids
        items:
          type: string
          enum:
          - creator_id
          - host_ids
          - invited_user_ids
          - speaker_ids
    ListExpansionsParameter:
      name: expansions
      in: query
      description: A comma separated list of fields to expand.
      required: false
      style: form
      explode: false
      schema:
        minItems: 1
        uniqueItems: true
        type: array
        description: "The list of fields you can expand for a [List](#List) object.\
          \ If the field has an ID, it can be expanded into a full object."
        example:
        - owner_id
        items:
          type: string
          enum:
          - owner_id
    TweetFieldsParameter:
      name: tweet.fields
      in: query
      description: A comma separated list of Tweet fields to display.
      required: false
      style: form
      explode: false
      schema:
        minItems: 1
        uniqueItems: true
        type: array
        description: "The list of fields you can display for a [Tweet](#Tweet) object."
        example:
        - created_at
        - author_id
        - entities
        - conversation_id
        - reply_settings
        - public_metrics
        items:
          type: string
          enum:
          - id
          - created_at
          - text
          - author_id
          - in_reply_to_user_id
          - referenced_tweets
          - attachments
          - withheld
          - geo
          - entities
          - public_metrics
          - possibly_sensitive
          - source
          - lang
          - context_annotations
          - non_public_metrics
          - promoted_metrics
          - organic_metrics
          - conversation_id
          - reply_settings
    UserFieldsParameter:
      name: user.fields
      in: query
      description: A comma separated list of User fields to display.
      required: false
      style: form
      explode: false
      schema:
        minItems: 1
        uniqueItems: true
        type: array
        description: "The list of fields you can display for a [User](#User) object."
        example:
        - username
        - verified
        - profile_image_url
        items:
          type: string
          enum:
          - id
          - created_at
          - name
          - username
          - protected
          - verified
          - withheld
          - profile_image_url
          - location
          - url
          - description
          - entities
          - pinned_tweet_id
          - public_metrics
    MediaFieldsParameter:
      name: media.fields
      in: query
      description: A comma separated list of Media fields to display.
      required: false
      style: form
      explode: false
      schema:
        minItems: 1
        uniqueItems: true
        type: array
        description: The list of fields you can display for a Media object.
        example:
        - media_key
        - duration_ms
        - height
        - preview_image_url
        - type
        - url
        - width
        - public_metrics
        - non_public_metrics
        - organic_metrics
        - promoted_metrics
        - alt_text
        - variants
        items:
          type: string
          enum:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          - non_public_metrics
          - organic_metrics
          - promoted_metrics
          - alt_text
          - variants
    PlaceFieldsParameter:
      name: place.fields
      in: query
      description: A comma separated list of Place fields to display.
      required: false
      style: form
      explode: false
      schema:
        minItems: 1
        uniqueItems: true
        type: array
        description: The list of fields you can display for a Place object.
        example:
        - id
        - name
        - country_code
        - place_type
        - full_name
        - country
        - contained_within
        - geo
        items:
          type: string
          enum:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
    PollFieldsParameter:
      name: poll.fields
      in: query
      description: A comma separated list of Poll fields to display.
      required: false
      style: form
      explode: false
      schema:
        minItems: 1
        uniqueItems: true
        type: array
        description: The list of fields you can display for a Poll object.
        example:
        - duration_minutes
        - options
        - voting_status
        - end_datetime
        items:
          type: string
          enum:
          - id
          - options
          - voting_status
          - end_datetime
          - duration_minutes
    ListFieldsParameter:
      name: list.fields
      in: query
      description: A comma separated list of List fields to display.
      required: false
      style: form
      explode: false
      schema:
        minItems: 1
        uniqueItems: true
        type: array
        description: The fields available for a List object.
        example:
        - created_at
        - description
        - follower_count
        - member_count
        - name
        - private
        items:
          type: string
          enum:
          - created_at
          - description
          - follower_count
          - id
          - member_count
          - name
          - owner_id
          - private
    SinceIdRequestParameter:
      name: since_id
      in: query
      description: The minimum Tweet ID to be included in the result set. This parameter
        takes precedence over start_time if both are specified.
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/TweetID'
      example: "791775337160081409"
    UntilIdRequestParameter:
      name: until_id
      in: query
      description: The maximum Tweet ID to be included in the result set. This parameter
        takes precedence over end_time if both are specified.
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/TweetID'
      example: "1346889436626259968"
    PaginationTokenRequestParameter:
      name: pagination_token
      in: query
      description: This parameter is used to get the next 'page' of results.
      required: false
      style: form
      explode: true
      schema:
        minLength: 1
        type: string
    SignedLongPaginationTokenRequestParameter:
      name: pagination_token
      in: query
      description: This parameter is used to get a specified 'page' of results.
      required: false
      style: form
      explode: true
      schema:
        type: integer
        format: int64
    MaxResultsRequestParameter:
      name: max_results
      in: query
      description: The maximum number of results
      required: false
      style: form
      explode: true
      schema:
        maximum: 100
        minimum: 5
        type: integer
        format: int32
    DefaultMaxResultsRequestParameter:
      name: max_results
      in: query
      description: The maximum number of results
      required: false
      style: form
      explode: true
      schema:
        maximum: 100
        minimum: 1
        type: integer
        format: int32
        default: 100
    StartTimeRequestParameter:
      name: start_time
      in: query
      description: YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the
        Tweets will be provided. The since_id parameter takes precedence if it is
        also specified.
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
      example: 2021-02-01T18:40:40.000Z
    EndTimeRequestParameter:
      name: end_time
      in: query
      description: YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Tweets
        will be provided. The until_id parameter takes precedence if it is also specified.
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
      example: 2021-02-14T18:40:40.000Z
    TweetTypeExcludesRequestParameter:
      name: exclude
      in: query
      description: The set of entities to exclude (e.g. 'replies' or 'retweets')
      required: false
      style: form
      explode: false
      schema:
        minItems: 1
        uniqueItems: true
        type: array
        description: The set of entities to exclude (e.g. 'replies' or 'retweets')
        example:
        - replies
        - retweets
        items:
          type: string
          enum:
          - replies
          - retweets
    BackfillMinutesRequestParameter:
      name: backfill_minutes
      in: query
      description: The number of minutes of backfill requested
      required: false
      style: form
      explode: true
      schema:
        maximum: 5
        minimum: 0
        type: integer
        format: int32
  securitySchemes:
    BearerToken:
      type: http
      scheme: bearer
    UserToken:
      type: http
      scheme: OAuth
    OAuth2UserToken:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://api.twitter.com/2/oauth2/authorize
          tokenUrl: https://api.twitter.com/2/oauth2/token
          scopes:
            tweet.read: "Allows the app to view any Tweets the authenticated user\
              \ can see, including Tweets from protected accounts."
            tweet.write: Allows the app to tweet and retweet for the authenticated
              user.
            users.read: "Allows the app to view any account the authenticated user\
              \ can see, including protected accounts."
            list.write: Allows the app to create and manage lists for the authenticated
              user.
            list.read: "Allows the app to view any lists the authenticated user has\
              \ created and lists they are a member of, including private lists."
            like.read: Allows the app to read Tweets that the authenticated user has
              liked.
            like.write: Allows the app to like and un-likes Tweets for the authenticated
              user.
            mute.read: Allows the app to read the users the authenticated user has
              muted.
            mute.write: Allows the app to mute and unmute users for the authenticated
              user.
            block.read: Allows the app to read the users the authenticated user has
              blocked.
            block.write: Allows the app to block and unblock users for the authenticated
              user.
            tweet.moderate.write: Allows the app to hide and unhide replies to the
              authenticated user's Tweets.
            follows.read: Allows the app to read the users who follow the authenticated
              user and users that they follow.
            follows.write: Allows the app to follow and unfollow users for the authenticated
              user.
            space.read: Allows the app to read the Spaces the authenticated user can
              see.
            offline.access: Allows the app to request a refresh token.
            bookmark.read: Allows the app to read bookmarked Tweets
            bookmark.write: Allows the app to add/remove Tweets to/from bookmarks
