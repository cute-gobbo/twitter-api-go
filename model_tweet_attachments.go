/*
Tweets and Users

API Reference â€” Labs v2

API version: 2.13
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package twitterapi

import (
	"encoding/json"
)

// TweetAttachments Specifies the type of attachments (if any) present in this Tweet.
type TweetAttachments struct {
	// A list of Media Keys for each one of the media attachments (if media are attached).
	MediaKeys []string `json:"media_keys,omitempty"`
	// A list of poll IDs (if polls are attached).
	PollIds []string `json:"poll_ids,omitempty"`
}

// NewTweetAttachments instantiates a new TweetAttachments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTweetAttachments() *TweetAttachments {
	this := TweetAttachments{}
	return &this
}

// NewTweetAttachmentsWithDefaults instantiates a new TweetAttachments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTweetAttachmentsWithDefaults() *TweetAttachments {
	this := TweetAttachments{}
	return &this
}

// GetMediaKeys returns the MediaKeys field value if set, zero value otherwise.
func (o *TweetAttachments) GetMediaKeys() []string {
	if o == nil || o.MediaKeys == nil {
		var ret []string
		return ret
	}
	return o.MediaKeys
}

// GetMediaKeysOk returns a tuple with the MediaKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TweetAttachments) GetMediaKeysOk() ([]string, bool) {
	if o == nil || o.MediaKeys == nil {
		return nil, false
	}
	return o.MediaKeys, true
}

// HasMediaKeys returns a boolean if a field has been set.
func (o *TweetAttachments) HasMediaKeys() bool {
	if o != nil && o.MediaKeys != nil {
		return true
	}

	return false
}

// SetMediaKeys gets a reference to the given []string and assigns it to the MediaKeys field.
func (o *TweetAttachments) SetMediaKeys(v []string) {
	o.MediaKeys = v
}

// GetPollIds returns the PollIds field value if set, zero value otherwise.
func (o *TweetAttachments) GetPollIds() []string {
	if o == nil || o.PollIds == nil {
		var ret []string
		return ret
	}
	return o.PollIds
}

// GetPollIdsOk returns a tuple with the PollIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TweetAttachments) GetPollIdsOk() ([]string, bool) {
	if o == nil || o.PollIds == nil {
		return nil, false
	}
	return o.PollIds, true
}

// HasPollIds returns a boolean if a field has been set.
func (o *TweetAttachments) HasPollIds() bool {
	if o != nil && o.PollIds != nil {
		return true
	}

	return false
}

// SetPollIds gets a reference to the given []string and assigns it to the PollIds field.
func (o *TweetAttachments) SetPollIds(v []string) {
	o.PollIds = v
}

func (o TweetAttachments) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MediaKeys != nil {
		toSerialize["media_keys"] = o.MediaKeys
	}
	if o.PollIds != nil {
		toSerialize["poll_ids"] = o.PollIds
	}
	return json.Marshal(toSerialize)
}

type NullableTweetAttachments struct {
	value *TweetAttachments
	isSet bool
}

func (v NullableTweetAttachments) Get() *TweetAttachments {
	return v.value
}

func (v *NullableTweetAttachments) Set(val *TweetAttachments) {
	v.value = val
	v.isSet = true
}

func (v NullableTweetAttachments) IsSet() bool {
	return v.isSet
}

func (v *NullableTweetAttachments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTweetAttachments(val *TweetAttachments) *NullableTweetAttachments {
	return &NullableTweetAttachments{value: val, isSet: true}
}

func (v NullableTweetAttachments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTweetAttachments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


