/*
Tweets and Users

API Reference â€” Labs v2

API version: 2.13
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package twitterapi

import (
	"encoding/json"
)

// EntityIndices Represent a boundary range (start and end index) for a recognized entity (for example a hashtag or a mention). `start` must be smaller than `end`.
type EntityIndices struct {
	// Index (zero-based) at which position this entity starts.
	Start int32 `json:"start"`
	// Index (zero-based) at which position this entity ends.
	End int32 `json:"end"`
}

// NewEntityIndices instantiates a new EntityIndices object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntityIndices(start int32, end int32) *EntityIndices {
	this := EntityIndices{}
	this.Start = start
	this.End = end
	return &this
}

// NewEntityIndicesWithDefaults instantiates a new EntityIndices object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityIndicesWithDefaults() *EntityIndices {
	this := EntityIndices{}
	return &this
}

// GetStart returns the Start field value
func (o *EntityIndices) GetStart() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Start
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
func (o *EntityIndices) GetStartOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Start, true
}

// SetStart sets field value
func (o *EntityIndices) SetStart(v int32) {
	o.Start = v
}

// GetEnd returns the End field value
func (o *EntityIndices) GetEnd() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.End
}

// GetEndOk returns a tuple with the End field value
// and a boolean to check if the value has been set.
func (o *EntityIndices) GetEndOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.End, true
}

// SetEnd sets field value
func (o *EntityIndices) SetEnd(v int32) {
	o.End = v
}

func (o EntityIndices) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["start"] = o.Start
	}
	if true {
		toSerialize["end"] = o.End
	}
	return json.Marshal(toSerialize)
}

type NullableEntityIndices struct {
	value *EntityIndices
	isSet bool
}

func (v NullableEntityIndices) Get() *EntityIndices {
	return v.value
}

func (v *NullableEntityIndices) Set(val *EntityIndices) {
	v.value = val
	v.isSet = true
}

func (v NullableEntityIndices) IsSet() bool {
	return v.isSet
}

func (v *NullableEntityIndices) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntityIndices(val *EntityIndices) *NullableEntityIndices {
	return &NullableEntityIndices{value: val, isSet: true}
}

func (v NullableEntityIndices) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntityIndices) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


