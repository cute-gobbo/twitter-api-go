/*
Tweets and Users

API Reference â€” Labs v2

API version: 2.13
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package twitterapi

import (
	"encoding/json"
)

// UserPublicMetrics A list of metrics for this user
type UserPublicMetrics struct {
	// Number of users who are following this user.
	FollowersCount int32 `json:"followers_count"`
	// Number of users this user is following.
	FollowingCount int32 `json:"following_count"`
	// The number of Tweets (including Retweets) posted by this user.
	TweetCount int32 `json:"tweet_count"`
	// The number of lists that include this user.
	ListedCount int32 `json:"listed_count"`
}

// NewUserPublicMetrics instantiates a new UserPublicMetrics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserPublicMetrics(followersCount int32, followingCount int32, tweetCount int32, listedCount int32) *UserPublicMetrics {
	this := UserPublicMetrics{}
	this.FollowersCount = followersCount
	this.FollowingCount = followingCount
	this.TweetCount = tweetCount
	this.ListedCount = listedCount
	return &this
}

// NewUserPublicMetricsWithDefaults instantiates a new UserPublicMetrics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserPublicMetricsWithDefaults() *UserPublicMetrics {
	this := UserPublicMetrics{}
	return &this
}

// GetFollowersCount returns the FollowersCount field value
func (o *UserPublicMetrics) GetFollowersCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FollowersCount
}

// GetFollowersCountOk returns a tuple with the FollowersCount field value
// and a boolean to check if the value has been set.
func (o *UserPublicMetrics) GetFollowersCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FollowersCount, true
}

// SetFollowersCount sets field value
func (o *UserPublicMetrics) SetFollowersCount(v int32) {
	o.FollowersCount = v
}

// GetFollowingCount returns the FollowingCount field value
func (o *UserPublicMetrics) GetFollowingCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FollowingCount
}

// GetFollowingCountOk returns a tuple with the FollowingCount field value
// and a boolean to check if the value has been set.
func (o *UserPublicMetrics) GetFollowingCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FollowingCount, true
}

// SetFollowingCount sets field value
func (o *UserPublicMetrics) SetFollowingCount(v int32) {
	o.FollowingCount = v
}

// GetTweetCount returns the TweetCount field value
func (o *UserPublicMetrics) GetTweetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TweetCount
}

// GetTweetCountOk returns a tuple with the TweetCount field value
// and a boolean to check if the value has been set.
func (o *UserPublicMetrics) GetTweetCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TweetCount, true
}

// SetTweetCount sets field value
func (o *UserPublicMetrics) SetTweetCount(v int32) {
	o.TweetCount = v
}

// GetListedCount returns the ListedCount field value
func (o *UserPublicMetrics) GetListedCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ListedCount
}

// GetListedCountOk returns a tuple with the ListedCount field value
// and a boolean to check if the value has been set.
func (o *UserPublicMetrics) GetListedCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ListedCount, true
}

// SetListedCount sets field value
func (o *UserPublicMetrics) SetListedCount(v int32) {
	o.ListedCount = v
}

func (o UserPublicMetrics) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["followers_count"] = o.FollowersCount
	}
	if true {
		toSerialize["following_count"] = o.FollowingCount
	}
	if true {
		toSerialize["tweet_count"] = o.TweetCount
	}
	if true {
		toSerialize["listed_count"] = o.ListedCount
	}
	return json.Marshal(toSerialize)
}

type NullableUserPublicMetrics struct {
	value *UserPublicMetrics
	isSet bool
}

func (v NullableUserPublicMetrics) Get() *UserPublicMetrics {
	return v.value
}

func (v *NullableUserPublicMetrics) Set(val *UserPublicMetrics) {
	v.value = val
	v.isSet = true
}

func (v NullableUserPublicMetrics) IsSet() bool {
	return v.isSet
}

func (v *NullableUserPublicMetrics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserPublicMetrics(val *UserPublicMetrics) *NullableUserPublicMetrics {
	return &NullableUserPublicMetrics{value: val, isSet: true}
}

func (v NullableUserPublicMetrics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserPublicMetrics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


