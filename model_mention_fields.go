/*
Tweets and Users

API Reference â€” Labs v2

API version: 2.13
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package twitterapi

import (
	"encoding/json"
)

// MentionFields Represent the portion of text recognized as a User mention, and its start and end position within the text.
type MentionFields struct {
	// The Twitter handle (screen name) of this user.
	Username string `json:"username"`
	// Unique identifier of this User. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.
	Id string `json:"id"`
}

// NewMentionFields instantiates a new MentionFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMentionFields(username string, id string) *MentionFields {
	this := MentionFields{}
	this.Username = username
	this.Id = id
	return &this
}

// NewMentionFieldsWithDefaults instantiates a new MentionFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMentionFieldsWithDefaults() *MentionFields {
	this := MentionFields{}
	return &this
}

// GetUsername returns the Username field value
func (o *MentionFields) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *MentionFields) GetUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *MentionFields) SetUsername(v string) {
	o.Username = v
}

// GetId returns the Id field value
func (o *MentionFields) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MentionFields) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MentionFields) SetId(v string) {
	o.Id = v
}

func (o MentionFields) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["username"] = o.Username
	}
	if true {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableMentionFields struct {
	value *MentionFields
	isSet bool
}

func (v NullableMentionFields) Get() *MentionFields {
	return v.value
}

func (v *NullableMentionFields) Set(val *MentionFields) {
	v.value = val
	v.isSet = true
}

func (v NullableMentionFields) IsSet() bool {
	return v.isSet
}

func (v *NullableMentionFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMentionFields(val *MentionFields) *NullableMentionFields {
	return &NullableMentionFields{value: val, isSet: true}
}

func (v NullableMentionFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMentionFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


