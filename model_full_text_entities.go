/*
Tweets and Users

API Reference â€” Labs v2

API version: 2.13
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package twitterapi

import (
	"encoding/json"
)

// FullTextEntities struct for FullTextEntities
type FullTextEntities struct {
	Urls []UrlEntity `json:"urls,omitempty"`
	Hashtags []HashtagEntity `json:"hashtags,omitempty"`
	Mentions []MentionEntity `json:"mentions,omitempty"`
	Cashtags []CashtagEntity `json:"cashtags,omitempty"`
}

// NewFullTextEntities instantiates a new FullTextEntities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFullTextEntities() *FullTextEntities {
	this := FullTextEntities{}
	return &this
}

// NewFullTextEntitiesWithDefaults instantiates a new FullTextEntities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFullTextEntitiesWithDefaults() *FullTextEntities {
	this := FullTextEntities{}
	return &this
}

// GetUrls returns the Urls field value if set, zero value otherwise.
func (o *FullTextEntities) GetUrls() []UrlEntity {
	if o == nil || o.Urls == nil {
		var ret []UrlEntity
		return ret
	}
	return o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullTextEntities) GetUrlsOk() ([]UrlEntity, bool) {
	if o == nil || o.Urls == nil {
		return nil, false
	}
	return o.Urls, true
}

// HasUrls returns a boolean if a field has been set.
func (o *FullTextEntities) HasUrls() bool {
	if o != nil && o.Urls != nil {
		return true
	}

	return false
}

// SetUrls gets a reference to the given []UrlEntity and assigns it to the Urls field.
func (o *FullTextEntities) SetUrls(v []UrlEntity) {
	o.Urls = v
}

// GetHashtags returns the Hashtags field value if set, zero value otherwise.
func (o *FullTextEntities) GetHashtags() []HashtagEntity {
	if o == nil || o.Hashtags == nil {
		var ret []HashtagEntity
		return ret
	}
	return o.Hashtags
}

// GetHashtagsOk returns a tuple with the Hashtags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullTextEntities) GetHashtagsOk() ([]HashtagEntity, bool) {
	if o == nil || o.Hashtags == nil {
		return nil, false
	}
	return o.Hashtags, true
}

// HasHashtags returns a boolean if a field has been set.
func (o *FullTextEntities) HasHashtags() bool {
	if o != nil && o.Hashtags != nil {
		return true
	}

	return false
}

// SetHashtags gets a reference to the given []HashtagEntity and assigns it to the Hashtags field.
func (o *FullTextEntities) SetHashtags(v []HashtagEntity) {
	o.Hashtags = v
}

// GetMentions returns the Mentions field value if set, zero value otherwise.
func (o *FullTextEntities) GetMentions() []MentionEntity {
	if o == nil || o.Mentions == nil {
		var ret []MentionEntity
		return ret
	}
	return o.Mentions
}

// GetMentionsOk returns a tuple with the Mentions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullTextEntities) GetMentionsOk() ([]MentionEntity, bool) {
	if o == nil || o.Mentions == nil {
		return nil, false
	}
	return o.Mentions, true
}

// HasMentions returns a boolean if a field has been set.
func (o *FullTextEntities) HasMentions() bool {
	if o != nil && o.Mentions != nil {
		return true
	}

	return false
}

// SetMentions gets a reference to the given []MentionEntity and assigns it to the Mentions field.
func (o *FullTextEntities) SetMentions(v []MentionEntity) {
	o.Mentions = v
}

// GetCashtags returns the Cashtags field value if set, zero value otherwise.
func (o *FullTextEntities) GetCashtags() []CashtagEntity {
	if o == nil || o.Cashtags == nil {
		var ret []CashtagEntity
		return ret
	}
	return o.Cashtags
}

// GetCashtagsOk returns a tuple with the Cashtags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullTextEntities) GetCashtagsOk() ([]CashtagEntity, bool) {
	if o == nil || o.Cashtags == nil {
		return nil, false
	}
	return o.Cashtags, true
}

// HasCashtags returns a boolean if a field has been set.
func (o *FullTextEntities) HasCashtags() bool {
	if o != nil && o.Cashtags != nil {
		return true
	}

	return false
}

// SetCashtags gets a reference to the given []CashtagEntity and assigns it to the Cashtags field.
func (o *FullTextEntities) SetCashtags(v []CashtagEntity) {
	o.Cashtags = v
}

func (o FullTextEntities) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Urls != nil {
		toSerialize["urls"] = o.Urls
	}
	if o.Hashtags != nil {
		toSerialize["hashtags"] = o.Hashtags
	}
	if o.Mentions != nil {
		toSerialize["mentions"] = o.Mentions
	}
	if o.Cashtags != nil {
		toSerialize["cashtags"] = o.Cashtags
	}
	return json.Marshal(toSerialize)
}

type NullableFullTextEntities struct {
	value *FullTextEntities
	isSet bool
}

func (v NullableFullTextEntities) Get() *FullTextEntities {
	return v.value
}

func (v *NullableFullTextEntities) Set(val *FullTextEntities) {
	v.value = val
	v.isSet = true
}

func (v NullableFullTextEntities) IsSet() bool {
	return v.isSet
}

func (v *NullableFullTextEntities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFullTextEntities(val *FullTextEntities) *NullableFullTextEntities {
	return &NullableFullTextEntities{value: val, isSet: true}
}

func (v NullableFullTextEntities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFullTextEntities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


