/*
Tweets and Users

API Reference â€” Labs v2

API version: 2.13
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package twitterapi

import (
	"encoding/json"
	"time"
)

// Poll Represent a Poll attached to a Tweet
type Poll struct {
	// Unique identifier of this poll.
	Id string `json:"id"`
	Options []PollOption `json:"options"`
	VotingStatus *string `json:"voting_status,omitempty"`
	EndDatetime *time.Time `json:"end_datetime,omitempty"`
	DurationMinutes *int32 `json:"duration_minutes,omitempty"`
}

// NewPoll instantiates a new Poll object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoll(id string, options []PollOption) *Poll {
	this := Poll{}
	this.Id = id
	this.Options = options
	return &this
}

// NewPollWithDefaults instantiates a new Poll object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPollWithDefaults() *Poll {
	this := Poll{}
	return &this
}

// GetId returns the Id field value
func (o *Poll) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Poll) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Poll) SetId(v string) {
	o.Id = v
}

// GetOptions returns the Options field value
func (o *Poll) GetOptions() []PollOption {
	if o == nil {
		var ret []PollOption
		return ret
	}

	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value
// and a boolean to check if the value has been set.
func (o *Poll) GetOptionsOk() ([]PollOption, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Options, true
}

// SetOptions sets field value
func (o *Poll) SetOptions(v []PollOption) {
	o.Options = v
}

// GetVotingStatus returns the VotingStatus field value if set, zero value otherwise.
func (o *Poll) GetVotingStatus() string {
	if o == nil || o.VotingStatus == nil {
		var ret string
		return ret
	}
	return *o.VotingStatus
}

// GetVotingStatusOk returns a tuple with the VotingStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Poll) GetVotingStatusOk() (*string, bool) {
	if o == nil || o.VotingStatus == nil {
		return nil, false
	}
	return o.VotingStatus, true
}

// HasVotingStatus returns a boolean if a field has been set.
func (o *Poll) HasVotingStatus() bool {
	if o != nil && o.VotingStatus != nil {
		return true
	}

	return false
}

// SetVotingStatus gets a reference to the given string and assigns it to the VotingStatus field.
func (o *Poll) SetVotingStatus(v string) {
	o.VotingStatus = &v
}

// GetEndDatetime returns the EndDatetime field value if set, zero value otherwise.
func (o *Poll) GetEndDatetime() time.Time {
	if o == nil || o.EndDatetime == nil {
		var ret time.Time
		return ret
	}
	return *o.EndDatetime
}

// GetEndDatetimeOk returns a tuple with the EndDatetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Poll) GetEndDatetimeOk() (*time.Time, bool) {
	if o == nil || o.EndDatetime == nil {
		return nil, false
	}
	return o.EndDatetime, true
}

// HasEndDatetime returns a boolean if a field has been set.
func (o *Poll) HasEndDatetime() bool {
	if o != nil && o.EndDatetime != nil {
		return true
	}

	return false
}

// SetEndDatetime gets a reference to the given time.Time and assigns it to the EndDatetime field.
func (o *Poll) SetEndDatetime(v time.Time) {
	o.EndDatetime = &v
}

// GetDurationMinutes returns the DurationMinutes field value if set, zero value otherwise.
func (o *Poll) GetDurationMinutes() int32 {
	if o == nil || o.DurationMinutes == nil {
		var ret int32
		return ret
	}
	return *o.DurationMinutes
}

// GetDurationMinutesOk returns a tuple with the DurationMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Poll) GetDurationMinutesOk() (*int32, bool) {
	if o == nil || o.DurationMinutes == nil {
		return nil, false
	}
	return o.DurationMinutes, true
}

// HasDurationMinutes returns a boolean if a field has been set.
func (o *Poll) HasDurationMinutes() bool {
	if o != nil && o.DurationMinutes != nil {
		return true
	}

	return false
}

// SetDurationMinutes gets a reference to the given int32 and assigns it to the DurationMinutes field.
func (o *Poll) SetDurationMinutes(v int32) {
	o.DurationMinutes = &v
}

func (o Poll) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["options"] = o.Options
	}
	if o.VotingStatus != nil {
		toSerialize["voting_status"] = o.VotingStatus
	}
	if o.EndDatetime != nil {
		toSerialize["end_datetime"] = o.EndDatetime
	}
	if o.DurationMinutes != nil {
		toSerialize["duration_minutes"] = o.DurationMinutes
	}
	return json.Marshal(toSerialize)
}

type NullablePoll struct {
	value *Poll
	isSet bool
}

func (v NullablePoll) Get() *Poll {
	return v.value
}

func (v *NullablePoll) Set(val *Poll) {
	v.value = val
	v.isSet = true
}

func (v NullablePoll) IsSet() bool {
	return v.isSet
}

func (v *NullablePoll) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoll(val *Poll) *NullablePoll {
	return &NullablePoll{value: val, isSet: true}
}

func (v NullablePoll) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoll) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


