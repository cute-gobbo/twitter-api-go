/*
Tweets and Users

API Reference â€” Labs v2

API version: 2.13
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package twitterapi

import (
	"encoding/json"
)

// TweetPublicMetrics Engagement metrics for the Tweet at the time of the request.
type TweetPublicMetrics struct {
	// Number of times this Tweet has been Retweeted.
	RetweetCount int32 `json:"retweet_count"`
	// Number of times this Tweet has been replied to.
	ReplyCount int32 `json:"reply_count"`
	// Number of times this Tweet has been liked.
	LikeCount int32 `json:"like_count"`
	// Number of times this Tweet has been quoted.
	QuoteCount *int32 `json:"quote_count,omitempty"`
}

// NewTweetPublicMetrics instantiates a new TweetPublicMetrics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTweetPublicMetrics(retweetCount int32, replyCount int32, likeCount int32) *TweetPublicMetrics {
	this := TweetPublicMetrics{}
	this.RetweetCount = retweetCount
	this.ReplyCount = replyCount
	this.LikeCount = likeCount
	return &this
}

// NewTweetPublicMetricsWithDefaults instantiates a new TweetPublicMetrics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTweetPublicMetricsWithDefaults() *TweetPublicMetrics {
	this := TweetPublicMetrics{}
	return &this
}

// GetRetweetCount returns the RetweetCount field value
func (o *TweetPublicMetrics) GetRetweetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RetweetCount
}

// GetRetweetCountOk returns a tuple with the RetweetCount field value
// and a boolean to check if the value has been set.
func (o *TweetPublicMetrics) GetRetweetCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RetweetCount, true
}

// SetRetweetCount sets field value
func (o *TweetPublicMetrics) SetRetweetCount(v int32) {
	o.RetweetCount = v
}

// GetReplyCount returns the ReplyCount field value
func (o *TweetPublicMetrics) GetReplyCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ReplyCount
}

// GetReplyCountOk returns a tuple with the ReplyCount field value
// and a boolean to check if the value has been set.
func (o *TweetPublicMetrics) GetReplyCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ReplyCount, true
}

// SetReplyCount sets field value
func (o *TweetPublicMetrics) SetReplyCount(v int32) {
	o.ReplyCount = v
}

// GetLikeCount returns the LikeCount field value
func (o *TweetPublicMetrics) GetLikeCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LikeCount
}

// GetLikeCountOk returns a tuple with the LikeCount field value
// and a boolean to check if the value has been set.
func (o *TweetPublicMetrics) GetLikeCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LikeCount, true
}

// SetLikeCount sets field value
func (o *TweetPublicMetrics) SetLikeCount(v int32) {
	o.LikeCount = v
}

// GetQuoteCount returns the QuoteCount field value if set, zero value otherwise.
func (o *TweetPublicMetrics) GetQuoteCount() int32 {
	if o == nil || o.QuoteCount == nil {
		var ret int32
		return ret
	}
	return *o.QuoteCount
}

// GetQuoteCountOk returns a tuple with the QuoteCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TweetPublicMetrics) GetQuoteCountOk() (*int32, bool) {
	if o == nil || o.QuoteCount == nil {
		return nil, false
	}
	return o.QuoteCount, true
}

// HasQuoteCount returns a boolean if a field has been set.
func (o *TweetPublicMetrics) HasQuoteCount() bool {
	if o != nil && o.QuoteCount != nil {
		return true
	}

	return false
}

// SetQuoteCount gets a reference to the given int32 and assigns it to the QuoteCount field.
func (o *TweetPublicMetrics) SetQuoteCount(v int32) {
	o.QuoteCount = &v
}

func (o TweetPublicMetrics) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["retweet_count"] = o.RetweetCount
	}
	if true {
		toSerialize["reply_count"] = o.ReplyCount
	}
	if true {
		toSerialize["like_count"] = o.LikeCount
	}
	if o.QuoteCount != nil {
		toSerialize["quote_count"] = o.QuoteCount
	}
	return json.Marshal(toSerialize)
}

type NullableTweetPublicMetrics struct {
	value *TweetPublicMetrics
	isSet bool
}

func (v NullableTweetPublicMetrics) Get() *TweetPublicMetrics {
	return v.value
}

func (v *NullableTweetPublicMetrics) Set(val *TweetPublicMetrics) {
	v.value = val
	v.isSet = true
}

func (v NullableTweetPublicMetrics) IsSet() bool {
	return v.isSet
}

func (v *NullableTweetPublicMetrics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTweetPublicMetrics(val *TweetPublicMetrics) *NullableTweetPublicMetrics {
	return &NullableTweetPublicMetrics{value: val, isSet: true}
}

func (v NullableTweetPublicMetrics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTweetPublicMetrics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


