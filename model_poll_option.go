/*
Tweets and Users

API Reference â€” Labs v2

API version: 2.13
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package twitterapi

import (
	"encoding/json"
)

// PollOption Describes a choice in a Poll object.
type PollOption struct {
	// Position of this choice in the poll.
	Position int32 `json:"position"`
	// The text of a poll choice.
	Label string `json:"label"`
	// Number of users who voted for this choice.
	Votes int32 `json:"votes"`
}

// NewPollOption instantiates a new PollOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPollOption(position int32, label string, votes int32) *PollOption {
	this := PollOption{}
	this.Position = position
	this.Label = label
	this.Votes = votes
	return &this
}

// NewPollOptionWithDefaults instantiates a new PollOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPollOptionWithDefaults() *PollOption {
	this := PollOption{}
	return &this
}

// GetPosition returns the Position field value
func (o *PollOption) GetPosition() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Position
}

// GetPositionOk returns a tuple with the Position field value
// and a boolean to check if the value has been set.
func (o *PollOption) GetPositionOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Position, true
}

// SetPosition sets field value
func (o *PollOption) SetPosition(v int32) {
	o.Position = v
}

// GetLabel returns the Label field value
func (o *PollOption) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *PollOption) GetLabelOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *PollOption) SetLabel(v string) {
	o.Label = v
}

// GetVotes returns the Votes field value
func (o *PollOption) GetVotes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Votes
}

// GetVotesOk returns a tuple with the Votes field value
// and a boolean to check if the value has been set.
func (o *PollOption) GetVotesOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Votes, true
}

// SetVotes sets field value
func (o *PollOption) SetVotes(v int32) {
	o.Votes = v
}

func (o PollOption) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["position"] = o.Position
	}
	if true {
		toSerialize["label"] = o.Label
	}
	if true {
		toSerialize["votes"] = o.Votes
	}
	return json.Marshal(toSerialize)
}

type NullablePollOption struct {
	value *PollOption
	isSet bool
}

func (v NullablePollOption) Get() *PollOption {
	return v.value
}

func (v *NullablePollOption) Set(val *PollOption) {
	v.value = val
	v.isSet = true
}

func (v NullablePollOption) IsSet() bool {
	return v.isSet
}

func (v *NullablePollOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePollOption(val *PollOption) *NullablePollOption {
	return &NullablePollOption{value: val, isSet: true}
}

func (v NullablePollOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePollOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


